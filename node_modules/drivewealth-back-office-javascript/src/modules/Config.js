// @flow
type Environment = {
	api: string,
	reports: string,
};

/**
 * Servers to send a request to
 * @name HOSTS
 * @property {string} API
 * @property {string} APPS
 * @property {string} REPORTS
 * @memberof Config
 * @constant
 */
export const HOSTS = {
	API: "api",
	REPORTS: "reports",
};

/**
 * Servers to send a request to
 * @name ENVIRONMENTS
 * @property {object} UAT
 * @property {object} PROD
 * @memberof Config
 * @constant
 */
export const ENVIRONMENTS = {
	UAT: {
		[HOSTS.API]: "http://bo-api.drivewealth.io/back-office",
		[HOSTS.REPORTS]: "http://reports.drivewealth.io",
	},
	PROD: {
		[HOSTS.API]: "https://bo-api.drivewealth.net/back-office",
		[HOSTS.REPORTS]: "https://reports.drivewealth.net",
	},
};

/**
 * @module Config
 */
export const Config: {
	env: Environment,
	httpImpl: Function,
	appVersion: string,
	appKey: string,
	onUnAuth: Function,
} = {
	env: ENVIRONMENTS.UAT,
	httpImpl: () => {},
	appVersion: "UNSET",
	appKey: "UNSET",
	onUnAuth() {},
};

/**
 * @example import drivewealth from "drivewealth-back-office-javascript";
 *
 * drivewealth.setup({
 *     env: drivewealth.ENVIRONMENTS.UAT,
 *     httpImpl: require("drivewealth-back-office-javascript/lib/httpImpls/request.js"),
 *     appVersion: "1.0",
 *     appKey: process.env.BO_APP_KEY,
 * });
 */
export function setup({
	env,
	httpImpl,
	appVersion,
	appKey,
}: {
	env: $PropertyType<typeof Config, "env">,
	httpImpl: $PropertyType<typeof Config, "httpImpl">,
	appVersion: $PropertyType<typeof Config, "appVersion">,
	appKey: $PropertyType<typeof Config, "appKey">,
}) {
	Config.env = env;
	Config.httpImpl = httpImpl;
	Config.appVersion = appVersion;
	Config.appKey = appKey;
}
