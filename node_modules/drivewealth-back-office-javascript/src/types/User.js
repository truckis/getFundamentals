// @flow
/**
 * @memberof UserTypes
 */
export type UserDetails = {
	id: string,
	ackSignedWhen: string,
	addressLine1: string,
	addressLine2: string,
	city: string,
	countryID: string,
	displayName: string,
	dob: string,
	email: string,
	firstName: string,
	gender: {
		name: string,
		description: string,
	},
	languageID: string,
	lastName: string,
	parentIB: {
		id: null | string,
		name: string,
	},
	phone: string,
	referralCode: string,
	stateProvince: string,
	username: string,
	wlpID: string,
	zipPostalCode: string,
	idNo: string,
	status: {
		name: string,
		description: string,
	},
	userType: {
		name: string,
		description: string,
	},
	usCitizen: boolean,
	updatedWhen: string,
	lastLoginWhen: string,
	brandAmbassador: boolean,
	employerBusiness: string,
	employmentStatus: {
		name: string,
		description: string,
	},
	citizenship: string,
	createdWhen: string,
	addressProofReviewWhen: string,
	approvedWhen: string,
	approvedBy: string,
	kycWhen: string,
	pictureReviewBy: string,
	pictureReviewWhen: string,
	marginDefault: number,
	maritalStatus: {
		name: string,
		description: string,
	},
	ackCustomerAgreement: boolean,
	ackFindersFee: boolean,
	ackForeignFindersFee: boolean,
	ackJointCustomerAgreement: boolean,
	ackJointFindersFee: boolean,
	ackJointForeignFindersFee: boolean,
	ackJointMarketData: boolean,
	ackMarketData: boolean,
	ackSignedBy: string,
	termsOfUse: boolean,
	addressProofReviewBy: string,
	badPasswordCount: number,
	director: boolean,
	employerCompany: string,
	employerCity: string,
	employerCountryID: string,
	employerIsBroker: boolean,
	employmentPosition: string,
	employmentYears: number,
	investmentObjectives: {
		name: string,
		description: string,
	},
	investmentExperience: {
		name: string,
		description: string,
	},
	fundingSources: Array<string>,
	politicallyExposed: boolean,
	riskTolerance: string,
	userNoteQty: number,
	avatarURL: string,
	annualIncomeRange: string,
	ackDisclosureRule14b: boolean,
	ackJointDisclosureRule14b: boolean,
	networthTotalRange: string,
	networthLiquidRange: string,
	transferFrequencyPerMonth: number,
	transferTotalExpectedRange: string,
	investmentHistory12M: number,
	permissionID: ?string,
	company: string,
	userID: string,
};

export type UserSearchResult = {
	approvedBy: ?string,
	approvedWhen: ?string,
	countryID: ?string,
	emailAddress: string,
	firstName: string,
	lastName: string,
	parentIB: $PropertyType<UserDetails, "parentIB">,
	phoneNumber: ?string,
	userID: string,
	userType: $PropertyType<UserDetails, "userType">,
	username: string,
	company: string,
	id: string,
};

/**
 * @memberof UserTypes
 */
export type BasicInfo = {
	type: "BASIC_INFO",
	data: {
		firstName: string,
		lastName: string,
		emailAddress: string,
		phone: string,
		country: string,
		language: string,
	},
	description: string,
};

/**
 * @memberof UserTypes
 */
export type IdentificationInfo = {
	type: "IDENTIFICATION_INFO",
	data: {
		value: string,
		type: string,
		citizenship: string,
	},
};

/**
 * @memberof UserTypes
 */
export type AddressInfo = {
	type: "ADDRESS_INFO",
	data: {
		street1: string,
		street2: string,
		city: string,
		province: string,
		postalCode: string,
		country: string,
	}
};

/**
 * @memberof Enums
 */
export type EmploymentStatus = "EMPLOYED" | "RETIRED" | "STUDENT" | "UNEMPLOYED" | "SELF_EMPLOYED";

/**
 * @memberof Enums
 */
export type EmploymentType =
	"AGRICULTURE"
	| "MINING"
	| "UTILITIES"
	| "CONSTRUCTION"
	| "MANUFACTURING"
	| "WHOLESALE"
	| "RETAIL"
	| "TRANSPORT"
	| "INFORMATION"
	| "FINANCE"
	| "REAL_ESTATE"
	| "PROFESSIONAL"
	| "MANAGEMENT"
	| "EDUCATION"
	| "HEALTH"
	| "ART"
	| "FOOD"
	| "PUBLIC"
	| "WASTE";

/**
 * @memberof Enums
 */
export type EmploymentPosition = "ACCOUNTANT"
	| "ACTUARY"
	| "ADJUSTER"
	| "ADMINISTRATOR"
	| "ADVERTISER"
	| "AGENT"
	| "ATC"
	| "AMBASSADOR"
	| "ANALYST"
	| "APPRAISER"
	| "ARCHITECT"
	| "ARTIST"
	| "ASSISTANT"
	| "ATHLETE"
	| "ATTENDANT"
	| "ATTORNEY"
	| "AUCTIONEER"
	| "AUDITOR"
	| "BARBER"
	| "BROKER"
	| "BUSINESS_EXEC"
	| "BUSINESS_OWNER"
	| "CAREGIVER"
	| "CARPENTER"
	| "CASHIER"
	| "CHEF"
	| "CHIROPRACTOR"
	| "CIVIL"
	| "CLERGY"
	| "CLERK"
	| "COMPLIANCE"
	| "CONSULTANT"
	| "CONTRACTOR"
	| "COUNSELOR"
	| "CUSTOMER_SERVICE"
	| "DEALER"
	| "DEVELOPER"
	| "DISTRIBUTOR"
	| "DOCTOR"
	| "DRIVER"
	| "ENGINEER"
	| "EXAMINER"
	| "EXTERMINATOR"
	| "FACTORY"
	| "FARMER"
	| "FINANCIAL"
	| "FISHERMAN"
	| "FLIGHT"
	| "HR"
	| "IMPEX"
	| "INSPECTOR"
	| "INTERN"
	| "INVESTMENT"
	| "INVESTOR"
	| "IT"
	| "JANITOR"
	| "JEWELER"
	| "LABORER"
	| "LANDSCAPER"
	| "LENDING"
	| "MANAGER"
	| "MECHANIC"
	| "MILITARY"
	| "MORTICIAN"
	| "NURSE"
	| "NUTRITIONIST"
	| "OFFICE"
	| "PHARMACIST"
	| "PHYSICAL"
	| "PILOT"
	| "POLICE"
	| "POLITICIAN"
	| "PM"
	| "REP"
	| "RESEARCHER"
	| "SAILOR"
	| "SALES"
	| "SCIENTIST"
	| "SEAMSTRESS"
	| "SECURITY"
	| "SOCIAL"
	| "TEACHER"
	| "TECHNICIAN"
	| "TELLER"
	| "TRADESPERSON"
	| "TRAINER"
	| "TRANSPORTER"
	| "UNDERWRITER"
	| "WRITER";

/**
 * @memberof UserTypes
 */
export type EmploymentInfo = {
	type: "EMPLOYMENT_INFO",
	data: {
		status: EmploymentStatus,
		position?: EmploymentPosition,
		company?: string,
		type?: EmploymentType,
		years: number,
		city?: string,
		country?: string,
		broker: boolean,
		directorOf: string | null,
	}
};

/**
 * @memberof Enums
 */
export type Gender = "Male" | "Female";

/**
 * @memberof Enums
 */
export type MaritalStatus = "SINGLE" | "DIVORCED" | "MARRIED" | "WIDOWED" | "PARTNER";

/**
 * @memberof UserTypes
 */
export type PersonalInfo = {
	type: "PERSONAL_INFO",
	data: {
		birthDay: number,
		birthMonth: number,
		birthYear: number,
		gender: Gender,
		marital: MaritalStatus,
		politicallyExposedNames: string | null,
	}
};

/**
 * @memberof Enums
 */
export type InvestmentObjectives = "LONG_TERM" | "INFREQUENT" | "FREQUENT" | "ACTIVE_DAILY" | "NEW";

/**
 * @memberof Enums
 */
export type InvestmentExperience = "NONE" | "YRS_1_2" | "YRS_3_5" | "YRS_5_10" | "YRS_10_";

/**
 * @memberof Enums
 */
export type RiskToleranceLevel = "LOW" | "MODERATE" | "SPECULATION" | "HIGH";

/**
 * @memberof UserTypes
 */
export type InvestorProfileInfo = {
	type: "INVESTOR_PROFILE_INFO",
	data: {
		investmentObjectives: InvestmentObjectives,
		investmentExperience: InvestmentExperience,
		annualIncome: number,
		networthLiquid: number,
		networthTotal: number,
		riskTolerance: RiskToleranceLevel,
	}
};

/**
 * @memberof UserTypes
 */
export type Disclosures = {
	type: "DISCLOSURES",
	data: {
		termsOfUse: boolean,
		customerAgreement: boolean,
		marketDataAgreement: boolean,
		rule14b: boolean,
		findersFee: boolean,
		signedBy: string,
	}
}

/**
 * @memberof UserTypes
 */
export type MarginDisclosure = {
	type: "MARGIN_DISCLOSURE",
	data: {
		marginAgreement: boolean,
	},
}

/**
 * @memberof UserTypes
 */
export type MarketingInfo = {
	type: "MARKETING_INFO",
	data: {
		campaign?: string,
		content?: string,
		medium?: string,
		source?: string,
		term?: string,
	},
};

/**
 * @memberof UserTypes
 */
export type CustodianInfo = {
	type: "CUSTODIAN_INFO",
	data: {
		userID: string,
	}
};

/**
 * @memberof Enums
 */
export type FundingSource = "EMP"
	| "GIFT"
	| "TRUST"
	| "INVESTMENT"
	| "SAVINGS"
	| "RETIRE"
	| "GAMBLING"
	| "LEGAL"
	| "FAMILY"
	| "UNEMP"
	| "ROLLOVER"
	| "RENT"
	| "SALE"
	| "INSURANCE";

/**
 * @memberof UserTypes
 */
export type ComplianceAMLInfo = {
	type: "COMPLIANCE_AML_INFO",
	data: {
		fundingSources: Array<FundingSource>,
		transferFrequencyPerMonth: number,
		transferTotalExpected: number,
		investmentHistory12M: number,
	}
}

type UserDocument = BasicInfo
	| IdentificationInfo
	| AddressInfo
	| EmploymentInfo
	| PersonalInfo
	| InvestorProfileInfo
	| Disclosures
	| MarginDisclosure
	| MarketingInfo
	| CustodianInfo
	| ComplianceAMLInfo

/**
 * @memberof UserTypes
 */
export type UserCreateDetails = {
	username: string,
	password: string,
	userType: string,
	parentIBID: string,
	documents: Array<UserDocument>,
}

/**
 * @memberof UserTypes
 */
export type UserBasic = {
	id: string,
	username: string,
	userType: {
		name: string,
		description: string,
	},
	status: {
		name: string,
		description: string,
	},
	parentIB: {
		id: string,
		name: string,
	},
	documents: Array<UserDocument>,
	wlpID: string,
	referralCode: string,
	createdWhen: string,
	updatedWhen: string,
}

/**
 * @memberof UserTypes
 */
export type Note = {
	userNoteID: string,
	createdWhen: string,
	subject: string,
	note: string,
};

/**
 * @memberof UserTypes
 */
export type NoteSubject = {
	type: string,
	author: {
		firstName: string,
		lastName: string,
		userID: string,
	},
};

/**
 * @memberof UserTypes
 */
export type KYCUser = {
	id: string,
	firstName: string,
	lastName: string,
	userNoteQty: number,
	country: string,
	status: string,
	timeStamp: string,
	mis: null | {
		misResultText: string,
	},
	cip: null | {
		response: string,
	}
};
