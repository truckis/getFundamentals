{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap bee69e8bb6658746dc0e","webpack:///src/index.js","webpack:///src/modules/Account.js","webpack:///src/modules/request.js","webpack:///src/modules/Config.js","webpack:///src/modules/Error.js","webpack:///~/extendable-error-class/dist/index.es5.js","webpack:///src/internal/Sessions.js","webpack:///src/modules/Violation.js","webpack:///src/modules/Auth.js","webpack:///src/modules/User.js","webpack:///src/modules/Document.js","webpack:///src/internal/documents.js","webpack:///src/modules/Instrument.js","webpack:///src/modules/Transaction.js","webpack:///src/modules/Order.js","webpack:///src/modules/Commission.js","webpack:///src/modules/Reports.js","webpack:///src/modules/MoneyMovement.js","webpack:///src/modules/Roles.js","webpack:///src/modules/Advisors.js"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","moduleId","installedModules","id","loaded","modules","call","m","c","p","_Account","_Auth","_Sessions","_User","_Instrument","_Transaction","_Order","_Commission","_Document","_Reports","_Violation","_MoneyMovement","_Roles","_Config","_request","_Advisors","ENVIRONMENTS","HOSTS","Account","Advisors","Violation","Auth","Config","Sessions","User","Instrument","Transaction","Order","Commission","Document","Reports","MoneyMovement","Roles","setup","request","userID","details","_request2","default","method","endpoint","body","then","data","accountID","account","accountNo","toUpperCase","result","type","_ref","accountSummary","accountFrom","accountTo","create","get","violationID","delete","commissionID","getMarginCallList","accounts","Promise","all","map","_ref2","getBlotter","summaries","symbol","qty","price","quantityAdjustment","BLOTTER_TYPES","CASH","ORDERS","TRANSACTIONS","EQUITY","VIOLATIONS","ALL","_ref$method","undefined","sessionKey","_ref$addlHeaders","addlHeaders","_ref$host","host","API","_ref$authenticated","authenticated","_ref$usesAppKey","usesAppKey","httpImpl","Error","savedSessionKey","headers","Accept","appKey","header","env","JSON","stringify","Object","constructor","mappableObj","keys","key","encodeURIComponent","join","resolve","reject","statusCode","resHeaders","resBody","contentType","indexOf","parse","err","String","errorMessage","errorCode","error","message","verificationResponse","onUnAuth","DriveWealthSessionError","DriveWealthError","_Error","appVersion","REPORTS","UAT","_defineProperty","_UAT","PROD","_PROD","_extendableErrorClass","_classCallCheck","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","ExtendableError","_this2","instance","Constructor","TypeError","self","ReferenceError","_inherits","subClass","superClass","prototype","value","enumerable","writable","configurable","setPrototypeOf","_extendableBuiltin2","name","captureStackTrace","stack","cls","ExtendableBuiltin","Reflect","construct","Array","from","arguments","sessions","username","password","ip_address","languageID","osVersion","osType","scrRes","appTypeID","authToken","save","pendingTempCode","tempCode","pendingUsername","2FAType","locale","pending2FAType","code","verificationCode","_ref3","authResponse","callback","VERIFICATION_TYPES","SMS","_documents","note","subject","searchQuery","filter","resultSet","rawQuery","fields","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","field","REGEXPS","test","return","getFieldsToSearch","reduce","_extends","getSearchQuery","requests","trim","getByAccountNo","_value$split","split","_value$split2","_slicedToArray","first","last","responses","results","acc","concat","_toConsumableArray","isArray","resultsByID","assign","image","documentID","getURL","_len","length","userIDs","_key","getPendingCounts","query","getPending","permissionGroupID","documents","phoneNumber","fullName","document","FormData","append","Content-Type","getDocuments","url","reviewerUserID","approvedByUserID","DOCUMENT_TYPES","PHOTO_ID","ADDRESS","PHOTO_ID_AND_ADDRESS","CORPORATE","TRUST","RISK","TAX","OTHER","REJECTION_REASONS","PICTURE","INVALID","MISMATCH_NAME","ILLEGIBLE","EXPIRED","MISMATCH_ADDRESS","LANGUAGE_IDS","ENGLISH","CHINESE","SPANISH","PORTUGUESE","path","queryString","ttl","Number","instrumentID","toISOString","x","y","formatValue","wlpID","types","startDate","endDate","options","base","dateRange","limit","limitParam","direction","offset","transactions","order","waitForFill","fillRetryInterval","fillMaxRetries","checkSummary","summary","transaction","orderId","orderID","isRejected","orderStatus","isFilled","notMarket","orderType","reason","updatedReason","match","orderDetails","orderNo","setTimeout","catch","TYPES","MARKET","LIMIT","STOP","SIDES","BUY","SELL","commissionGroups","format","extraFields","constructBody","form","createElement","setAttribute","input","appendChild","submit","parentNode","removeChild","REPORT_FORMATS","reportName","dateStart","dateEnd","fileKey","REPORT_NAMES","STATEMENTS","fileType","downloadReport","RESTRICTED","subscription","TradingType","date","ACCOUNT_VIOLATIONS","Date","getReport","OrderNo","TICKET_AUDIT","CORRESPONDENT","PDF","XLS","HTML","RECONCILIATION","TRANSACTION","POSITIONS_AND_ORDERS","POSITIONS","PLACED_ORDERS","REFERRED_ACCOUNTS","FINANCIALS","CONFIRMS","ReportFormat","ReportName","WlpID","LanguageID","status","toLowerCase","depositID","DIRECTIONS","DEPOSITS","WITHDRAWALS","active","description","permissionSet","role","Advisor","productDetails","productID","dateFrom","dateTo","allocationID","allocation","portfolioID","portfolio","fundID","fund"],"mappings":";;;;;;;;;CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,SAAAA,OAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,2BAAAD,IAEAD,EAAA,2BAAAC,MACCK,KAAA,WACD,mBCNA,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAN,OAGA,IAAAC,GAAAM,EAAAD,IACAN,WACAQ,GAAAF,EACAG,QAAA,EAUA,OANAC,GAAAJ,GAAAK,KAAAV,EAAAD,QAAAC,EAAAA,EAAAD,QAAAK,GAGAJ,EAAAQ,QAAA,EAGAR,EAAAD,QAvBA,GAAAO,KAqCA,OATAF,GAAAO,EAAAF,EAGAL,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,GAGAT,EAAA,qVCrCA,IAAAU,GAAAV,EAAA,UACAW,EAAAX,EAAA,UACAY,EAAAZ,EAAA,UACAa,EAAAb,EAAA,UACAc,EAAAd,EAAA,WACAe,EAAAf,EAAA,WACAgB,EAAAhB,EAAA,WACAiB,EAAAjB,EAAA,WACAkB,EAAAlB,EAAA,WACAmB,EAAAnB,EAAA,WACAoB,EAAApB,EAAA,UACAqB,EAAArB,EAAA,WACAsB,EAAAtB,EAAA,WACAuB,EAAAvB,EAAA,GACAwB,EAAAxB,EAAA,UACAyB,EAAAzB,EAAA,aAGC0B,aAAAA,EAAAA,eACAC,MAAAA,EAAAA,QAEAC,QAAAA,EAAAA,UACAC,SAAAA,EAAAA,UACAC,UAAAA,EAAAA,UACAC,KAAAA,EAAAA,UACAC,OAAAA,EAAAA,SACAC,SAAAA,EAAAA,UACAC,KAAAA,EAAAA,UACAC,WAAAA,EAAAA,UACAC,YAAAA,EAAAA,UACAC,MAAAA,EAAAA,UACAC,WAAAA,EAAAA,UACAC,SAAAA,EAAAA,UACAC,QAAAA,EAAAA,UACAC,cAAAA,EAAAA,UACAC,MAAAA,EAAAA,UAEAC,MAAAA,EAAAA,QACAC,QAAAA,EAAAA,mBAIAlB,aAAAA,EAAAA,aACAC,MAAAA,EAAAA,MAEAC,QAAAA,EAAAA,QACAC,SAAAA,EAAAA,QACAC,UAAAA,EAAAA,QACAC,KAAAA,EAAAA,QACAC,OAAAA,EAAAA,OACAC,SAAAA,EAAAA,QACAC,KAAAA,EAAAA,QACAC,WAAAA,EAAAA,QACAC,YAAAA,EAAAA,QACAC,MAAAA,EAAAA,QACAC,WAAAA,EAAAA,QACAC,SAAAA,EAAAA,QACAC,QAAAA,EAAAA,QACAC,cAAAA,EAAAA,QACAC,MAAAA,EAAAA,QAEAC,MAAAA,EAAAA,MACAC,QAAAA,EAAAA,soBC9DDpB,EAAAxB,EAAA,UACAoB,EAAApB,EAAA,UAeqB4B,kFAsBNiB,EAAgBC,GAa7B,OAAO,EAAAC,EAAAC,UACNC,OAAQ,OACRC,SAAU,YACVC,KAAAA,KACIL,GACHD,OAAAA,MAECO,KAAK,SAAAC,GAAA,MAAQA,GAAKF,mCAMXG,GACV,OAAO,EAAAP,EAAAC,UACNE,SAAAA,aAAuBI,IACrBF,KAAK,SAAAC,GAAA,MAAQA,GAAKF,KAAKI,iDAMLC,GAUrB,OAAO,EAAAT,EAAAC,UACNE,SAAAA,8BAAwCM,EAAUC,gBAChDL,KAAK,SAAAC,GAAA,MAAQA,GAAKF,KAAKO,sCAMfJ,EAAmBR,GAC9B,OAAO,EAAAC,EAAAC,UACNC,OAAQ,QACRC,SAAAA,aAAuBI,EACvBH,KAAML,IACJM,KAAK,SAAAC,GAAA,MAAQA,GAAKF,0CAMJG,EAAmBK,GACpC,OAAO,EAAAZ,EAAAC,UACNC,OAAQ,MACRC,SAAAA,aAAuBI,EAAvB,aACEF,KAAK,SAAAQ,GAAA,GAAWC,GAAXD,EAAGT,KAAQU,cAAX,OAAkCF,GAAOE,EAAeF,GAAQE,qCAMzDf,GACf,OAAO,EAAAC,EAAAC,UACNC,OAAQ,OACRC,SAAU,qBACVC,KAAAA,KACIL,GACHgB,YAAahB,EAAQgB,YAAYL,cACjCM,UAAWjB,EAAQiB,UAAUN,kBAE5BL,KAAK,SAAAC,GAAA,MAAQA,GAAKF,+CAMCG,EAAmBR,GACzC,MAAOhB,GAAAA,QAAUkC,OAAOV,EAAWR,yCAMfQ,GACpB,MAAOxB,GAAAA,QAAUmC,IAAIX,2CAMCA,EAAmBY,GACzC,MAAOpC,GAAAA,QAAUqC,OAAOb,EAAWY,4CAMZZ,EAAmBc,GAC1C,OAAO,EAAArB,EAAAC,UACNE,SAAAA,aAAuBI,EAAvB,eACAL,OAAQ,OACRE,MAAQiB,aAAAA,KACNhB,KAAK,SAAAC,GAAA,MAAQA,GAAKF,KAAKI,sDAO1B,OAAO,EAAAR,EAAAC,UACNE,SAAU,0BACRE,KAAK,SAAAC,GAAA,MAAQA,GAAKF,+DAUrB,MAAOvB,GAAQyC,oBAAoBjB,KAClC,SAAAkB,GAAA,MAAYC,SAAQC,IAAIF,EAASG,IAAI,SAAAC,GAAA,GAAGvE,GAAHuE,EAAGvE,EAAH,OAAYyB,GAAQ+C,WAAWxE,MAClEiD,KAAK,SAAAwB,GAAA,OAAgBN,SAAAA,EAAUM,UAAAA,4CAQlCtB,EACAuB,EACAC,EACAC,GAEA,OAAO,EAAAhC,EAAAC,UACNE,SAAAA,aAAuBI,EAAvB,aACAL,OAAQ,QACRE,MACC0B,OAAAA,EACAG,mBAAoBF,EACpBC,MAAAA,KAEC3B,KAAK,yDAKiBE,GACzB,OAAO,EAAAP,EAAAC,UACNE,SAAAA,aAAuBI,EAAvB,eACEF,KAAK,SAAAC,GAAA,MAAQA,GAAKF,eA3LFvB,GAUbqD,eACNC,KAAM,OACNC,OAAQ,SACRC,aAAc,eACdC,OAAQ,SACRC,WAAY,aACZC,IAAK,gBAhBc3D,mDCCN,SAASgB,GAATgB,GAsBZ,GAAA4B,GAAA5B,EArBFX,OAAAA,MAqBEwC,KAAAD,EArBO,MAqBPA,EApBFtC,EAoBEU,EApBFV,SACAwC,EAmBE9B,EAnBF8B,WACAvC,EAkBES,EAlBFT,KAkBEwC,EAAA/B,EAjBFgC,YAAAA,MAiBEH,KAAAE,KAAAA,EAAAE,EAAAjC,EAhBFkC,KAAAA,MAgBEL,KAAAI,EAhBKlE,EAAAA,MAAMoE,IAgBXF,EAAAG,EAAApC,EAfFqC,cAAAA,MAeER,KAAAO,GAAAA,EAAAE,EAAAtC,EAdFuC,WAAAA,MAcEV,KAAAS,GAAAA,CACF,KAAKlE,EAAAA,OAAOoE,SAAU,KAAM,IAAIC,OAAM,yBACtC,KAAKX,EAAY,CAChB,GAAMY,GAAkBrE,EAAAA,QAASgC,KAC7BqC,KAAiBZ,EAAaY,GAGnC,GAAMC,IACLC,OAAQ,mBAELL,KACHI,EAAQ,qBAAuBvE,EAAAA,OAAOyE,QAExB,SAAXxD,GAAgC,QAAXA,GAA+B,UAAXA,IAC5CsD,EAAQ,gBAAkB,oBAEvBb,GAAcO,IACjBM,EAAQ,iBAAmBb,EAE5B,KAAK,GAAMgB,KAAUd,GACpBW,EAAQG,GAAUd,EAAYc,EAO/B,IAJAxD,EAAWlB,EAAAA,OAAO2E,IAAIb,GAAQ5C,EAEE,qBAA5BqD,EAAQ,kBAAwCpD,EAAOyD,KAAKC,UAAU1D,IAEtEyC,GAAeA,EAAY,gBAAiB,CAC/C,IAAKzC,EAAM,KAAM,IAAIkD,OAAM,qDAC3B,IACiC,sCAAhCT,EAAY,iBACTzC,YAAgB2D,SAChB3D,EAAK4D,cAAgBD,OACvB,CACD,GAAME,GAAsB7D,CAC5BA,GAAO2D,OAAOG,KAAKD,GAAavC,IAC/B,SAAAyC,GAAA,MAAOC,oBAAmBD,GAAO,IAAMC,mBAAmBH,EAAYE,MACrEE,KAAK,MAIT,MAAO,IAAI7C,SAAQ,SAAC8C,EAASC,GAAV,MAClBtF,GAAAA,OAAOoE,SACNnD,EACAC,EACAqD,EACApD,EACA,SAACoE,EAAYC,EAAYC,GACxB,GAAMC,GAAcF,EAAW,iBAAmBA,EAAW,iBAAmB,EAChF,IAAIC,IAAwD,IAA7CC,EAAYC,QAAQ,oBAClC,IACCF,EAAUb,KAAKgB,MAAMH,GACpB,MAAOI,IAKV,GAA8B,MAA1BC,OAAOP,GAAY,IAAwC,MAA1BO,OAAOP,GAAY,GACvD,MAAOF,IACNlE,KAAMsE,EACNF,WAAAA,EACAhB,QAASiB,GAIX,IAAIO,GAAe,iDACfC,EAAY,IAkBhB,OAjBIP,KACCA,EAAQQ,QACXF,EAAeN,EAAQQ,MAAMC,QAC7BF,EAAYP,EAAQQ,MAAMD,WAGvBP,EAAQS,SAAWT,EAAQO,YAC9BD,EAAeN,EAAQS,QACvBF,EAAYP,EAAQO,WAGjBP,EAAQU,uBACXJ,EAAeN,EAAQU,qBAAqBD,QAC5CF,EAAY,OAIK,MAAfT,GACHvF,EAAAA,OAAOoG,WACAd,EAAO,GAAIe,GAAAA,wBACjBN,EACAN,EACAF,EACAC,EACAQ,KAIKV,EAAO,GAAIgB,GAAAA,iBACjBP,EACAN,EACAF,EACAC,EACAQ,mEA1HmBpF,CAjBxB,IAAArB,GAAAvB,EAAA,GACAuI,EAAAvI,EAAA,GACAY,EAAAZ,EAAA,kOC+DO,QAAS2C,GAATiB,GAUJ,GATF+C,GASE/C,EATF+C,IACAP,EAQExC,EARFwC,SACAoC,EAOE5E,EAPF4E,WACA/B,EAME7C,EANF6C,MAOAzE,GAAO2E,IAAMA,EACb3E,EAAOoE,SAAWA,EAClBpE,EAAOwG,WAAaA,EACpBxG,EAAOyE,OAASA,6DAdD9D,MAAAA,CAnDT,IAAMhB,GAAAA,EAAAA,OACZoE,IAAK,MACL0C,QAAS,WAWG/G,EAAAA,EAAAA,cACZgH,KAAAA,KAAAA,EAAAA,EACE/G,EAAMoE,IAAM,4CADd4C,EAAAC,EAEEjH,EAAM8G,QAAU,iCAFlBG,GAIAC,MAAAA,KAAAA,EAAAA,EACElH,EAAMoE,IAAM,8CADd4C,EAAAG,EAEEnH,EAAM8G,QAAU,mCAFlBK,IASY9G,EAAAA,EAAAA,QAOZ2E,IAAKjF,EAAagH,IAClBtC,SAAU,aACVoC,WAAY,QACZ/B,OAAQ,QACR2B,SALG,4sBC/CJ,IAAAW,GAAA/I,EAAA,0DAKasI,IAAAA,6BACZ,QAAAA,GACCJ,EACA/E,EACAoE,EACAhB,EACAyB,GACCgB,EAAAjJ,KAAAuI,EAAA,IAAAW,GAAAC,EAAAnJ,MAAAuI,EAAAa,WAAArC,OAAAsC,eAAAd,IAAAhI,KAAAP,KACKmI,GADL,OAEDe,GAAK9F,KAAOA,EACZ8F,EAAK1B,WAAaA,EAClB0B,EAAK1C,QAAUA,EACf0C,EAAKjB,UAAYA,EALhBiB,mBAPmCI,EAAAA,SAmBzBhB,IAAAA,oCACZ,QAAAA,GACCH,EACA/E,EACAoE,EACAhB,EACAyB,GACCgB,EAAAjJ,KAAAsI,EAAA,IAAAiB,GAAAJ,EAAAnJ,MAAAsI,EAAAc,WAAArC,OAAAsC,eAAAf,IAAA/H,KAAAP,KACKmI,GADL,OAEDoB,GAAKnG,KAAOA,EACZmG,EAAK/B,WAAaA,EAClB+B,EAAK/C,QAAUA,EACf+C,EAAKtB,UAAYA,EALhBsB,mBAP0CD,EAAAA,oBAiB5Cf,iBAAAA,EACAD,wBAAAA,kBC3CD,YAEA,SAAAW,GAAAO,EAAAC,GAAiD,KAAAD,YAAAC,IAA0C,KAAA,IAAAC,WAAA,qCAE3F,QAAAP,GAAAQ,EAAApJ,GAAiD,IAAAoJ,EAAa,KAAA,IAAAC,gBAAA,4DAAyF,QAAArJ,GAAA,gBAAAA,IAAA,kBAAAA,GAAAoJ,EAAApJ,EAEvJ,QAAAsJ,GAAAC,EAAAC,GAA0C,GAAA,kBAAAA,IAAA,OAAAA,EAA+D,KAAA,IAAAL,WAAA,iEAAAK,GAAuGD,GAAAE,UAAAjD,OAAA9C,OAAA8F,GAAAA,EAAAC,WAAyEhD,aAAeiD,MAAAH,EAAAI,YAAA,EAAAC,UAAA,EAAAC,cAAA,KAA6EL,IAAAhD,OAAAsD,eAAAtD,OAAAsD,eAAAP,EAAAC,GAAAD,EAAAV,UAAAW,GA2BrX,GAAAT,GAAA,SAAAgB,GAGA,QAAAhB,GAAAnB,GACAc,EAAAjJ,KAAAsJ,EAEA,IAAAJ,GAAAC,EAAAnJ,KAAA+G,OAAAsC,eAAAC,GAAA/I,KAAAP,KAAAmI,GASA,OAPAe,GAAAqB,KAAArB,EAAAlC,YAAAuD,KACArB,EAAAf,QAAAA,EACA,kBAAA7B,OAAAkE,kBACAlE,MAAAkE,kBAAAtB,EAAAA,EAAAlC,aAEAkC,EAAAuB,MAAA,GAAAnE,OAAA6B,GAAAsC,MAEAvB,EAGA,MAjBAW,GAAAP,EAAAgB,GAiBAhB,GA3CA,SAAAoB,GACA,QAAAC,KACA,GAAAnB,GAAAoB,QAAAC,UAAAH,EAAAI,MAAAC,KAAAC,WAEA,OADAjE,QAAAsD,eAAAb,EAAAzC,OAAAsC,eAAArJ,OACAwJ,EAkBA,MAfAmB,GAAAX,UAAAjD,OAAA9C,OAAAyG,EAAAV,WACAhD,aACAiD,MAAAS,EACAR,YAAA,EACAC,UAAA,EACAC,cAAA,KAIArD,OAAAsD,eACAtD,OAAAsD,eAAAM,EAAAD,GAEAC,EAAAvB,UAAAsB,EAGAC,GAsBCrE,OAEDzG,GAAAD,QAAA0J,saCrDMpH,aAGL,QAAAA,KAAc+G,EAAAjJ,KAAAkC,GACblC,KAAKmH,IAAM,6CAIX,MAAOnH,MAAKmH,iCAGRA,GACJnH,KAAKmH,IAAMA,mCAIXnH,KAAKmH,IAAM,cAIA8D,EAAAA,EAAAA,SAAW,GAAI/I,aACb+I,waCrBfxJ,EAAAxB,EAAA,0DAOqB8B,kFAINwB,EAAmBR,GAChC,OAAO,EAAAC,EAAAC,UACNC,OAAQ,OACRC,SAAAA,aAAuBI,EAAvB,cACAH,KAAML,IACJM,KAAK,0CAMEE,GAMV,OAAO,EAAAP,EAAAC,UAAUE,SAAAA,aAAuBI,EAAvB,gBAAiDF,KAAK,SAAAC,GAAA,MAAQA,GAAKF,sCAMvEG,EAAmBY,GAChC,OAAO,EAAAnB,EAAAC,UACNC,OAAQ,SACRC,SAAAA,aAAuBI,EAAvB,eAA+CY,IAC7Cd,KAAK,iCA/BWtB,+eCPrBN,EAAAxB,EAAA,UACAuB,EAAAvB,EAAA,GACAY,EAAAZ,EAAA,UAMqB+B,iFAgBPkJ,EAAkBC,GAC9B,OAAO,EAAAnI,EAAAC,UACNC,OAAQ,OACRC,SAAU,QACVC,MACC8H,SAAAA,EACAC,SAAAA,EACA1C,WAAYxG,EAAAA,OAAOwG,WAEnB2C,WAAY,UACZC,WAAY,QACZC,UAAW,UACXC,OAAQ,UACRC,OAAQ,UACRC,UAAW,KAEVpI,KAAK,SAAAQ,GAAc,GAAXT,GAAWS,EAAXT,IACV,OAAIA,GAAKsI,WACRxJ,EAAAA,QAASyJ,KAAKvI,EAAKsI,WACZtI,IAGRpB,EAAK4J,gBAAkBxI,EAAKyI,SAC5B7J,EAAK8J,gBAAkB1I,EAAK8H,eACrB9H,GAAKyI,eACLzI,GAAK8H,SACL9H,0CAOWQ,GACnB,IAAK5B,EAAK4J,gBAAiB,KAAM,IAAItF,OAAM,6CAC3C,QAAO,EAAAtD,EAAAC,UACNC,OAAQ,OACRC,SAAU,YACVC,MACC8H,SAAUlJ,EAAK8J,gBACfD,SAAU7J,EAAK4J,gBACfG,UAAWnI,EACXoI,OAAQ,QAEP3I,KAAK,SAAAsB,GAAc,GAAXvB,GAAWuB,EAAXvB,IAEV,OADApB,GAAKiK,eAAiBrI,EACfR,0CAOY8I,GACpB,IAAKlK,EAAKiK,eACT,KAAM,IAAI3F,OAAM,uEAEjB,QAAO,EAAAtD,EAAAC,UACNC,OAAQ,OACRC,SAAU,yBACVC,MACC8H,SAAUlJ,EAAK8J,gBACfD,SAAU7J,EAAK4J,gBACfG,UAAW/J,EAAKiK,eAChBE,iBAAkBD,KAEjB7I,KAAK,SAAA+I,GAAc,GAAXhJ,GAAWgJ,EAAXhJ,IAKV,OAJApB,GAAK4J,gBAAkB,KACvB5J,EAAK8J,gBAAkB,KACvB9J,EAAKiK,eAAiB,KACtB/J,EAAAA,QAASyJ,KAAKvI,EAAKiJ,aAAaX,WACzBtI,EAAKiJ,gDAIEC,GACfrK,EAAAA,OAAOoG,SAAWiE,UA5FCtK,GACb4J,gBAAkB,KADL5J,EAEb8J,gBAAkB,KAFL9J,EAGbiK,eAAiB,KAHJjK,EASbuK,oBACNC,IAAK,iBAVcxK,yyCCRrBP,EAAAxB,EAAA,UACAU,EAAAV,EAAA,UACAkB,EAAAlB,EAAA,WACAwM,EAAAxM,EAAA,IAkBqBkC,kFAINY,GACb,OAAO,EAAAC,EAAAC,UACNC,OAAQ,OACRC,SAAU,SACVC,KAAML,IACJM,KAAK,SAAAC,GAAA,MAAQA,GAAKF,mCAMXN,GACV,OAAO,EAAAE,EAAAC,UAAUE,SAAU,UAAYL,IAAUO,KAAK,SAAAC,GAAA,MAAQA,GAAKF,oCAMxDN,EAAgBC,GAC3B,OAAO,EAAAC,EAAAC,UACNC,OAAQ,QACRC,SAAU,UAAYL,EACtBM,KAAML,IACJM,KAAK,SAAAC,GAAA,MAAQA,GAAKF,wCAMNN,GACf,OAAO,EAAAE,EAAAC,UACNE,SAAAA,UAAoBL,EAApB,WACEO,KAAK,SAAAC,GAAA,MAAQA,GAAKF,0CAMJN,EAAgB4J,EAAcC,GAC/C,OAAO,EAAA3J,EAAAC,UACNC,OAAQ,OACRC,SAAAA,UAAoBL,EAApB,SACAM,MACCN,OAAAA,EACA6J,QAAS9F,KAAKC,UAAU6F,GACxBD,KAAAA,KAECrJ,KAAK,SAAAC,GAAA,MAAQA,GAAKF,2CAMHN,GAClB,OAAO,EAAAE,EAAAC,UAAUE,SAAAA,UAAoBL,EAApB,cAAyCO,KAAK,SAAAC,GAAA,MAAQA,GAAKF,8CAMvDwJ,GAOrB,OAAO,EAAA5J,EAAAC,UACNE,SAAAA,iBAA2B4D,OAAOG,KAAK0F,GACrCC,OAAO,SAAA1F,GAAA,MAAOyF,GAAYzF,KAC1BzC,IAAI,SAAAyC,GAAA,MAAUA,GAAV,IAAiBC,mBAAmBW,OAAO6E,EAAYzF,OAC3DE,KAAK,OACLhE,KAAK,SAAAC,GAAA,MAAQA,GAAKF,KAAK0J,sDAoBFC,GACxB,GAAMC,IAAU,YAAa,SAAU,YAAa,cAAe,YADzBC,GAAA,EAAAC,GAAA,EAAAC,MAAAzH,EAAA,KAG1C,IAAA,GAAA0H,GAAAC,EAAoBL,EAApBM,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA4B,CAAA,GAAjBS,GAAiBN,EAAAnD,KAC3B,IAAI9H,EAAKwL,QAAQD,GAAOE,KAAKb,GAC5B,OAAQW,IALgC,MAAA5F,GAAAoF,GAAA,EAAAC,EAAArF,EAAA,QAAA,KAAAmF,GAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,KAAAC,IAS1C,OAAQ,WAAY,YAAa,WAAY,gDAGxBJ,GACrB,MAAO5K,GAAK2L,kBAAkBf,GAC5BgB,OAAO,SAACnB,EAAac,GAAd,MAAAM,MACJpB,EADIhE,KAEN8E,EAAQX,wCAUEA,GACb,GAAMH,GAAczK,EAAK8L,eAAelB,GAGlCmB,EACLnH,OAAOG,KAAK0F,GACVlI,IAAI,SAAAgJ,GACJ,GAAMzD,GAAQ2C,EAAYc,GAAOS,MACjC,QAAQT,GACP,IAAK,SACJ,MAAOvL,GAAK+B,IAAI+F,EAEjB,KAAK,YACJ,MAAOpI,GAAAA,QAAQuM,eAAenE,GAAO5G,KACpC,SAAAG,GAAA,MAAWrB,GAAK+B,IAAIV,EAAQV,SAG9B,KAAK,YACJ,MAAOjB,GAAAA,QAAQqC,IAAI+F,GAAO5G,KACzB,SAAAG,GAAA,MAAWrB,GAAK+B,IAAIV,EAAQV,SAG9B,KAAK,WAAY,GAAAuL,GACMpE,EAAMqE,MAAM,MADlBC,EAAAC,EAAAH,EAAA,GACTI,EADSF,EAAA,GACFG,EADEH,EAAA,EAGhB,QAAO,EAAAvL,EAAAC,UACNE,SAAAA,2BAAqCsL,EAArC,aAAuDC,IAEtDrL,KAAK,SAACC,GAAD,MAAmCA,GAAKF,KAAK0J,WAGrD,KAAK,WACL,IAAK,YACL,IAAK,WACL,IAAK,cACL,IAAK,QACJ,OAAO,EAAA9J,EAAAC,UACNE,SAAAA,iBAA2BuK,EAA3B,IAAoCzD,IAEnC5G,KAAK,SAACC,GAAD,MAAmCA,GAAKF,KAAK0J,WAErD,SACC,KAAM,IAAIxG,OAAJ,kDAC6CoH,EAD7C,OAOX,OAAOlJ,SAAQC,IAAIyJ,GACjB7K,KAAK,SAAAsL,GAEL,GAAMC,GAAiDD,EAAUZ,OAChE,SAACc,EAAKrB,GAAN,SAAAsB,OAAAC,EAAmBF,GAAnBE,EAA4BjE,MAAMkE,QAAQxB,GAAQA,GAAQA,UAKrDyB,EAA4CL,EAAQb,OACzD,SAACc,EAAKrB,GAEL,GAAM1K,GAAoC,gBAAZ0K,GAAKpN,GAAkBoN,EAAKpN,GAClC,gBAAhBoN,GAAK1K,OAAsB0K,EAAK1K,OAAS,EAEjD,OAAOiE,QAAOmI,UAAWL,EAAlBjG,KAA0B9F,EAAS0K,QAI5C,OAAOzG,QAAOG,KAAK+H,GAAavK,IAAI,SAAAyC,GAAA,MAAO8H,GAAY9H,4CAOtCrE,GACnB,OAAO,EAAAE,EAAAC,UACNE,SAAAA,UAAoBL,EAApB,eACEO,KAAK,SAAAC,GAAA,MAAQA,GAAKF,8CAMAN,EAAgBc,EAAcuL,GACnD,MAAO3M,GAAAA,QAASyB,OAAOnB,EAAQc,EAAMuL,wCAMlBC,GACnB,MAAO5M,GAAAA,QAAS6M,OAAOD,yCAOvB,OAAO,EAAApM,EAAAC,UACNE,SAAU,yBACRE,KAAK,SAAAC,GAAA,MAAQA,GAAKF,6CAMDF,GAA0D,IAAA,GAAAoM,GAAAtE,UAAAuE,OAAvCC,EAAuC1E,MAAAwE,EAAA,EAAAA,EAAA,EAAA,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAvCD,EAAuCC,EAAA,GAAAzE,UAAAyE,EAC9E,OAAOjL,SAAQC,IACd+K,EAAQ9K,IAAI,SAAA5B,GAAA,OAAU,EAAAE,EAAAC,UACrBE,SAAAA,wBAAkCL,EAClCI,OAAQ,QACRE,MACCF,OAAQA,EAAOQ,oBAKhBL,KAAK,yDAOP,OAAO,EAAAoJ,EAAAiD,kBAAiB,4CAOPC,GACjB,OAAO,EAAAlD,EAAAmD,YAAW,0BAA2BD,kCAMhC7M,GACb,OAAO,EAAAE,EAAAC,UACNC,OAAQ,OACRC,SAAU,gBACVC,MAAQN,OAAAA,KACNO,KAAK,qDAORwM,EACA/M,GAEA,GACMM,IACL0M,YACClM,KAHW,mBAIXN,MACClD,GAAIyP,KAKP,QAAO,EAAA7M,EAAAC,UACNC,OAAQ,QACRC,SAAAA,UAAoBL,EACpBM,KAAAA,IACEC,KAAK,SAAAC,GAAA,MAAQA,GAAKF,eAlSFjB,GAuFbwL,SACNlK,UAAW,qBACXX,OAAQ,2EAERS,UAAW,mFACXwM,YAAa,UACbC,SAAU,qBA7FS7N,+eCrBrBV,EAAAxB,EAAA,UACAa,EAAAb,EAAA,UACAwM,EAAAxM,EAAA,IAQqBuC,kFAwENM,EAAgBc,EAAcuL,GAC3C,GAAqB,gBAAVA,GACV,OAAO,EAAAnM,EAAAC,UACNC,OAAQ,OACRC,SAAU,aACVC,MACCN,OAAAA,EACAc,KAAAA,EACAqM,SAAUd,GAEXtJ,aACCY,OAAQ,sBAEPpD,KAAK,aAGT,IAAMD,GAAO,GAAI8M,SAMjB,OAJA9M,GAAK+M,OAAO,SAAUrN,GACtBM,EAAK+M,OAAO,eAAgBvM,GAC5BR,EAAK+M,OAAO,gBAAiBhB,IAEtB,EAAAnM,EAAAC,UACNC,OAAQ,OACRC,SAAU,aACVC,KAAAA,EACAyC,aACCuK,eAAgB,yBAEf/M,KAAK,0CAME+L,GACV,OAAO,EAAApM,EAAAC,UACNE,SAAU,cAAgBiM,IACxB/L,KAAK,SAAAC,GAAA,MAAQA,GAAKF,2CAMHN,GAClB,MAAOX,GAAAA,QAAKkO,aAAavN,kCAMZsM,GACb,OAAO,EAAApM,EAAAC,UACNE,SAAAA,cAAwBiM,EAAxB,SACE/L,KAAK,SAAAC,GAAA,MAAQA,GAAKF,KAAKkN,iDAO1B,OAAO,EAAA7D,EAAAiD,kBAAiB,gDAOPC,GACjB,OAAO,EAAAlD,EAAAmD,YAAW,cAAeD,0CAMZ7M,EAAgBuI,GACrC,OAAO,EAAArI,EAAAC,UACNC,OAAQ,QACRC,SAAU,4BACVC,MACCN,OAAAA,EACAuI,WAAAA,KAEChI,KAAK,6CAORP,EACAyN,EACAT,GAEA,OAAO,EAAA9M,EAAAC,UACNC,OAAQ,OACRC,SAAU,oBACVC,MACCN,OAAAA,EACA0N,iBAAkBD,EAClBT,UAAAA,KAECzM,KAAK,sBA9KWb,GAUbiO,gBACNC,SAAU,aACVC,QAAS,mBACTC,qBAAsB,8BACtBC,UAAW,YACXC,MAAO,kBACPC,KAAM,kBACNC,IAAK,MACLC,MAAO,SAlBYzO,EAoCb0O,mBACNC,SACCC,QAAS,gCACTC,cAAe,wBACfC,UAAW,oBACXC,QAAS,kBACTN,MAAO,iBAERN,SACCS,QAAS,gCACTI,iBAAkB,2BAClBH,cAAe,wBACfC,UAAW,oBACXC,QAAS,kBACTN,MAAO,kBAlDWzO,EA6DbiP,cACNC,QAAS,QACTC,QAAS,QACTC,QAAS,QACTC,WAAY,mBAjEOrP,2ICVrB,IAAAf,GAAAxB,EAAA,yDAEayP,GAAAA,iBAAmB,SAACoC,GAAD,OAAkB,EAAA9O,EAAAC,UACjDE,SAAAA,IAAc2O,EAAd,sBACEzO,KAAK,SAAAC,GAAA,MAAQA,GAAKF,QAERwM,EAAAA,WAAa,SAACkC,EAAcnC,GACxC,GAAMoC,GAAcjH,MAAMkE,QAAQW,GAAd,gBACHA,EAAMtI,KAAK,KADR,UAETsI,CAEX,QAAO,EAAA3M,EAAAC,UACNE,SAAAA,UAAoB2O,EAApB,IAA4BC,IAC1B1O,KAAK,SAAAC,GAAA,MAAQyD,QAAOmI,UAAW5L,EAAKF,MACtC4O,IAAKC,OAAO3O,EAAKkD,QAAQ,ujBCd3B/E,EAAAxB,EAAA,0DAaqBmC,kFAINW,GACb,OAAO,EAAAC,EAAAC,UACNC,OAAQ,OACRC,SAAU,eACVC,KAAML,IACJM,KAAK,SAAAC,GAAA,MAAQA,GAAKF,mCAMX8O,GACV,OAAO,EAAAlP,EAAAC,UACNE,SAAAA,gBAA0B+O,IACxB7O,KAAK,SAAAC,GAAA,MAAQA,GAAKF,oCAOrB8O,EACAnP,GAEA,OAAO,EAAAC,EAAAC,UACNC,OAAQ,QACRC,SAAAA,gBAA0B+O,EAC1B9O,KAAML,IACJM,KAAK,SAAAC,GAAA,MAAQA,GAAKF,wCAOrB,OAAO,EAAAJ,EAAAC,UACNE,SAAU,iBACRE,KAAK,SAAAC,GAAA,MAAQA,GAAKF,8DAOrB,OAAO,EAAAJ,EAAAC,UACNE,SAAU,2CACRE,KAAK,SAAAC,GAAA,MAAQA,GAAKF,2CAGH+D,EAAa8C,GAC/B,OAAQ9C,GACP,IAAK,YACL,IAAK,UACJ,MAAO8C,GAAMkI,aACd,SACC,MAAOlI,kDAYF,GALmB0F,GAKnB3E,UAAAuE,OAAA,OAAA7J,KAAAsF,UAAA,GAAAA,UAAA,KACP,QAAO,EAAAhI,EAAAC,UACNE,SAAU,iCAAmC4D,OAAOG,KAAKyI,GACvD5B,OAAO,SAACqE,EAAGC,GAAJ,SAAAvD,OAAAC,EAAcqD,IAAMC,EAApB,IAAyBjQ,EAAWkQ,YAAYD,EAAG1C,EAAM0C,WAChEhL,KAAK,OACLhE,KAAK,SAAAC,GAAA,MAAQA,GAAKF,0BA5EFhB,4bCLrBX,EAAAxB,EAAA,0DAOqBoC,oGAKnB,OAAO,EAAAW,EAAAC,UAAUE,SAAU,wBAAyBE,KAAK,SAAAC,GAAA,MAAQA,GAAKF,qDAMW,GAAvDmP,GAAuDvH,UAAAuE,OAAA,OAAA7J,KAAAsF,UAAA,GAAAA,UAAA,GAAvC,IAC1C,QAAO,EAAAhI,EAAAC,UACNE,SAAAA,6BAAuCoP,IACrClP,KAAK,SAAAC,GAAA,MAAQA,GAAKF,KAAK,GAAGoP,uCAMhBjP,EAAmBR,GAMhC,OAAO,EAAAC,EAAAC,UACNC,OAAQ,OACRC,SAAAA,aAAuBI,EAAvB,gBACAH,KAAML,IACJM,KAAK,SAAAC,GAAA,MAAQA,GAAKF,mCAOrBG,EACAkP,EACAC,EACAC,GAEA,GAAMC,GAAAA,aAAoBrP,EAApB,gBACAsP,EAAAA,SAAqBJ,EAAUN,cAA/B,OAAmDO,EAAQP,cAC7DW,MAAAA,EAEHA,GADGH,GAAWA,EAAQG,MACdH,EAAQG,MAER,EAET,IAAMC,GAAAA,UAAuBD,EACzBxC,EAAMsC,EAAOC,EAAYE,CAM7B,OAJIJ,IAAWA,EAAQK,WAAaL,EAAQM,SAC3C3C,GAAAA,WAAkBqC,EAAQM,OAA1B,cAA8CN,EAAQK,YAGhD,EAAAhQ,EAAAC,UAAUE,SAAUmN,IAAOjN,KAAK,SAAAC,GAAA,MAAQA,GAAKF,qCAMxC8P,GAOZ,OAAO,EAAAlQ,EAAAC,UACNC,OAAQ,OACRC,SAAU,sBACVC,KAAM8P,IACJ7P,KAAK,SAAAC,GAAA,MAAQA,GAAKF,0BA1EFf,mpBCdrBZ,EAAAxB,EAAA,UACAU,EAAAV,EAAA,UACAuI,EAAAvI,EAAA,GAMqBqC,kFA2BnBkB,EAIA2P,GAU+B,GAT/BR,GAS+B3H,UAAAuE,OAAA,OAAA7J,KAAAsF,UAAA,GAAAA,UAAA,IAJ9BoI,aAAa,EACbC,kBAAmB,IACnBC,eAAgB,GAGjB,OAAO,IAAI9O,SAAQ,SAAC8C,EAASC,IAC5B,EAAAvE,EAAAC,UACCC,OAAQ,OACRC,SAAU,UACVC,KAAAA,GACCK,UAAWD,EAAQC,WAChB0P,KAEF9P,KAAK,SAAAC,GACP,GAAM6P,GAAQ7P,EAAKF,IAEnB,KAAIuP,EAAQS,YA6DX,MAAO9L,GAAQ6L,IA5DM,QAAfI,KACLZ,EAAQW,iBAERzR,EAAAA,QAAQ+C,WAAWpB,EAAQD,WAAWF,KAAK,SAAAmQ,GAAW,GAAAvG,IAAA,EAAAC,GAAA,EAAAC,MAAAzH,EAAA,KACrD,IAAA,GAAA0H,GAAAC,EAA0BmG,EAAQN,aAAlC5F,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAgD,CAAA,GAArCwG,GAAqCrG,EAAAnD,KAC/C,IAAIwJ,EAAYC,UAAYP,EAAMQ,QAAS,CAC1C,GAAMC,GAAiD,KAA3BH,EAAYI,YAClCC,EAA+C,KAA3BL,EAAYI,YAChCE,EAA8C,KAAzBN,EAAYO,SAEvC,IAAIJ,EAAY,CACf,GAAI3L,GAAY,KACZD,EAAe,2BACbiM,EAAiBR,EAAYS,cAC7BhM,EAAQ+L,EAAOE,MAAM,oBAO3B,OALIrJ,OAAMkE,QAAQ9G,IAAUA,EAAM,IAAMA,EAAM,KAC7CD,EAAYC,EAAM,GAClBF,EAAeE,EAAM,IAGfX,EAAO,GAAIgB,GAAAA,iBACjBP,EACA1E,EAAKF,KACLE,EAAKkE,WACLlE,EAAKkD,QACLyB,IAEK,GAAI6L,GAAYC,GACK,IAA3BpB,EAAQW,eAAsB,CAC9B,GAAMc,GAAAA,KACFjB,EACAM,EAKJ,cAFOW,GAAaV,QAEbpM,EAAQ8M,GAEhB,QApCmD,MAAAtM,GAAAoF,GAAA,EAAAC,EAAArF,EAAA,QAAA,KAAAmF,GAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,KAAAC,IAyCrD,GAA+B,IAA3BwF,EAAQW,eACX,MAAO/L,GAAO,GAAIgB,GAAAA,iBAAJ,kCACqB4K,EAAMkB,QACxC/Q,EAAKF,KACLE,EAAKkE,WACLlE,EAAKkD,QACL,MAGD8N,YAAWf,EAAcZ,EAAQU,qBAEhCkB,MAAMhN,SAOTgN,MAAMhN,uCAOMoM,EAAiB5Q,GACjC,OAAO,EAAAC,EAAAC,UACNC,OAAQ,MACRC,SAAAA,WAAqBwQ,EACrBvQ,KAAML,IACJM,KAAK,sBAhIWf,GAObkS,OACNC,OAAQ,SACRC,MAAO,QACPC,KAAM,QAVarS,EAkBbsS,OACNC,IAAK,MACLC,KAAM,kBApBaxS,4bCTrBb,EAAAxB,EAAA,0DAOqBsC,oGAKnB,OAAO,EAAAS,EAAAC,UACNE,SAAU,iBACRE,KAAK,SAAAC,GAAA,MAAQA,GAAKF,KAAK2R,sCAPPxS,mpBCNrB1B,EAAAZ,EAAA,UACAuB,EAAAvB,EAAA,GACAwB,EAAAxB,EAAA,UASqBwC,0FA8DEuS,EAAgBzK,EAAc0K,GACnD,GAAMjI,GAASvK,EAAQyS,cAAcF,EAAQzK,EAAM0K,GAE7C3E,EAAMrO,EAAAA,OAAO2E,IAAIhF,EAAAA,MAAM8G,SAAW,eAElCyM,EAAOlF,SAASmF,cAAc,OACpCD,GAAKE,aAAa,SAAU,UAC5BF,EAAKE,aAAa,SAAU,QAC5BF,EAAKE,aAAa,SAAU/E,EAE5B,KAAK,GAAM5C,KAASV,GAAQ,CAC3B,GAAMsI,GAAQrF,SAASmF,cAAc,QACrCE,GAAMD,aAAa,OAAQ3H,GAC3B4H,EAAMD,aAAa,QAASrI,EAAOU,IACnC4H,EAAMD,aAAa,OAAQ,UAC3BF,EAAKI,YAAYD,GAGlBrF,SAAS7M,KAAKmS,YAAYJ,GAC1BA,EAAKK,SACLL,EAAKM,WAAWC,YAAYP,qCAQZ5K,EAAc0K,GAC9B,OAAO,EAAAjS,EAAAC,UACNC,OAAQ,OACR6C,KAAMnE,EAAAA,MAAM8G,QACZvF,SAAU,eACVC,KAAMX,EAAQyS,cAAczS,EAAQkT,eAAe9O,KAAM0D,EAAM0K,GAC/D/O,eAAe,EACfE,YAAY,EACZP,aACCuK,eAAgB,uCAEf/M,KAAK,SAAAC,GAAA,MAAQA,GAAKF,yCAOrBG,EACAqS,EACAC,EACAC,GAEA,OAAO,EAAA9S,EAAAC,UACNE,SAAAA,aAAuBI,EAAvB,IAAoCqS,EAApC,SAAuDC,EAAvD,OAAuEC,IACrEzS,KAAK,SAAAC,GAAA,MAAQA,GAAKF,0CAMJG,EAAmBwS,GACpC,OAAO,EAAA/S,EAAAC,UACNE,SAAAA,IAAcV,EAAQuT,aAAaC,WAAnC,IAAiD1S,EAAjD,IAA8DwS,IAC5D1S,KAAK,SAAAC,GAAA,MAAQA,GAAKF,KAAKkN,uDAMK4F,GAC/BzT,EAAQ0T,eAAeD,EAAUzT,EAAQuT,aAAaI,YACrDC,cAAc,sDAOiBH,EAAkBI,EAAqBC,GACvE9T,EAAQ0T,eAAeD,EAAUzT,EAAQuT,aAAaQ,oBACrDF,YAAAA,EACAG,KAAMF,EAAKpE,6DAOemE,EAAqBC,GAChD,MAAO9T,GAAQiU,UAAUjU,EAAQuT,aAAaQ,oBAC7CF,YAAAA,EACAG,KAAMF,EAAKpE,4DAOc+D,EAAkBS,GAC5ClU,EAAQ0T,eAAeD,EAAUzT,EAAQuT,aAAaY,cACrDD,QAASA,EAAQjT,uDAOGiT,GACrB,MAAOlU,GAAQiU,UAAUjU,EAAQuT,aAAaY,cAC7CD,QAASA,EAAQjT,yDAOK6S,GACvB,OAAO,EAAAvT,EAAAC,UACNE,SAAAA,IAAcV,EAAQuT,aAAaa,cAAnC,SAAyDN,IACvDlT,KAAK,SAAAC,GAAA,MAAQA,GAAKF,KAAKkN,cApLP7N,GAQbkT,gBACNmB,IAAK,MACLC,IAAK,MACLlQ,KAAM,OACNmQ,KAAM,QAZavU,EA+BbuT,cACNI,WAAY,mBACZI,mBAAoB,oBACpBI,aAAc,cACdK,eAAgB,kBAChBC,YAAa,iBACbC,qBAAsB,uBACtBC,UAAW,iBACXC,cAAe,aACfC,kBAAmB,UACnBC,WAAY,cACZV,cAAe,sBACfZ,WAAY,aACZuB,SAAU,YA5CS/U,EA+CbyS,cAAgB,SAACF,EAAgBzK,EAAc0K,GAA/B,MAAAjH,IACtByJ,aAAczC,EACd0C,WAAYnN,EACZ5E,WAAYzD,EAAAA,QAASgC,MACrByT,MAAO,KACPC,WAAY,SACT3C,cArDgBxS,4bCVrBhB,EAAAxB,EAAA,0DAMqByC,mFAUnBsQ,EACA6E,EACAjU,EACA+O,GAEA,GAAIxP,GAAAA,YAAuB6P,EAAU8E,cAAjC,WAAyDD,EAAOnU;4DAmBpE,OAjBIE,KACHT,GAAAA,UACkB,gBAATS,GACLA,EACAA,EAAKyD,KAAK,MACX3D,eAIAiP,IACCA,EAAQK,WAAaL,EAAQM,QAAUN,EAAQG,MAClD3P,GAAAA,UAAsBwP,EAAQG,MAA9B,WAA8CH,EAAQM,OAAtD,cAA0EN,EAAQK,UACxEL,EAAQG,QAClB3P,GAAAA,UAAsBwP,EAAQG,SAIzB,EAAA9P,EAAAC,UAAUE,SAAAA,IAAYE,KAAK,SAAAC,GAAA,OACjCA,KAAMA,EAAKF,oCAOFhD,EAAY4S,GAItB,OAAO,EAAAhQ,EAAAC,UACNE,SAAAA,YAAsB6P,EAAtB,IAAmC5S,IACjCiD,KAAK,SAAAC,GAAA,MAAQA,GAAKF,oCAMVhD,EAAY2C,EAAiBiQ,GACxC,OAAO,EAAAhQ,EAAAC,UACNC,OAAQ,QACRC,SAAAA,YAAsB6P,EAAtB,IAAmC5S,EACnCgD,KAAML,IACJM,KAAK,kDAOR2P,EACA6E,EACAjU,GAEA,GAAMT,GAAAA,YAAuB6P,EAAU8E,cAAjC,IAAkDlU,EAAlD,oBAA0EiU,CAEhF,QAAO,EAAA7U,EAAAC,UACNE,SAAAA,EACA0C,aACCY,OAAQ,cAEPpD,KAAK,SAAAC,GAAA,MAAQA,GAAKF,2DAGaN,GAClC,GAAMK,GAAAA,UAAqBL,EAArB,qBACN,QAAO,EAAAE,EAAAC,UAAUE,SAAAA,IAAYE,KAAK,SAAAC,GAAA,MAAQA,GAAKF,iDAGvB2U,GACxB,GAAM5U,GAAAA,+BAA0C4U,CAChD,QAAO,EAAA/U,EAAAC,UAAUE,SAAAA,IAAYE,KAAK,SAAAC,GAAA,MAAQA,GAAKF,sDAGlB2U,EAAmB3U,GAChD,GAAMD,GAAAA,+BAA0C4U,CAChD,QAAO,EAAA/U,EAAAC,UACNC,OAAQ,QACRC,SAAAA,EACAC,KAAAA,IACEC,KAAK,SAAAC,GAAA,MAAQA,GAAKF,sDAGQ2U,GAC7B,GAAM5U,GAAAA,+BAA0C4U,CAChD,QAAO,EAAA/U,EAAAC,UACNC,OAAQ,SACRC,SAAAA,IACEE,KAAK,SAAAC,GAAA,MAAQA,aAxGGZ,GACbsV,YACNC,SAAU,WACVC,YAAa,yBAHMxV,4bCRrBjB,EAAAxB,EAAA,0DAaqB0C,oGAKnB,OAAO,EAAAK,EAAAC,UACNE,SAAAA,wBACEE,KAAK,SAAAC,GAAA,MAAQA,GAAKF,mDAOrB,OAAO,EAAAJ,EAAAC,UACNE,SAAAA,iBACEE,KAAK,SAAAC,GAAA,MAAQA,GAAKF,qDAOrB+U,EACAC,EACAC,EACAC,GAEA,GAAMlV,IACL+U,OAAAA,EACAC,YAAAA,EACAC,cAAAA,EACAC,KAAAA,EAED,QAAO,EAAAtV,EAAAC,UACNC,OAAQ,OACRC,SAAAA,sBACAC,KAAAA,IACEC,KAAK,SAAAC,GAAA,MAAQA,GAAKF,wCAOrBhD,EACAkY,GAEA,GAAMlV,GAAOkV,CACb,QAAO,EAAAtV,EAAAC,UACNC,OAAQ,QACRC,SAAAA,uBAAiC/C,EACjCgD,KAAAA,IACEC,KAAK,SAAAC,GAAA,MAAQA,GAAKF,0BArDFT,gmBCbrBlB,EAAAxB,EAAA,0DAOqBsY,yFAIIzV,EAAgB0V,GACjC,GAAMpV,GAAAA,GACFN,OAAAA,GACG0V,EAEP,QAAO,EAAAxV,EAAAC,UACHC,OAAQ,OACRE,KAAAA,EACAD,SAAU,sBACXE,KAAK,SAAAC,GAAA,MAAQA,GAAKF,6CAOJqV,EAAmBD,GACpC,OAAO,EAAAxV,EAAAC,UACHC,OAAQ,QACRE,KAAMoV,EACNrV,SAAAA,qBAA+BsV,IAChCpV,KAAK,SAAAC,GAAA,MAAQA,GAAKF,8CAOHqV,GAClB,OAAO,EAAAzV,EAAAC,UAAUE,SAAAA,qBAA+BsV,IAAepV,KAAK,SAAAC,GAAA,MAAQA,GAAKF,qDAOxDN,GACzB,OAAO,EAAAE,EAAAC,UAAUE,SAAAA,UAAoBL,EAApB,sBAAiDO,KAAK,SAAAC,GAAA,MAAQA,GAAKF,iDAO/DsV,EAAgBC,GACrC,OAAO,EAAA3V,EAAAC,UAAUE,SAAAA,6BAAuCuV,EAASvG,cAAhD,OAAoEwG,EAAOxG,gBAAmB9O,KAAK,SAAAC,GAAA,MAAQA,GAAKF,qDAOxGN,GACzB,OAAO,EAAAE,EAAAC,UAAUE,SAAAA,UAAoBL,EAApB,yBAAoDO,KAAK,SAAAC,GAAA,MAAQA,GAAKF,iDAOlEwV,GACrB,OAAO,EAAA5V,EAAAC,UAAUE,SAAAA,wBAAkCyV,IAAkBvV,KAAK,SAAAC,GAAA,MAAQA,GAAKF,gDAOnEyV,GACpB,OAAO,EAAA7V,EAAAC,UACHE,SAAAA,uBACAD,OAAQ,OACRE,KAAMyV,IACPxV,KAAK,SAAAC,GAAA,MAAQA,GAAKF,mDAOEsV,EAAgBC,GACvC,OAAO,EAAA3V,EAAAC,UACHE,SAAAA,wBAAkCuV,EAASvG,cAA3C,OAA+DwG,EAAOxG,gBACvE9O,KAAK,SAAAC,GAAA,MAAQA,GAAKF,mDAOEN,EAAgB4V,EAAgBC,GACvD,OAAO,EAAA3V,EAAAC,UACHE,SAAAA,UAAoBL,EAApB,wBAAkD4V,EAASvG,cAA3D,OAA+EwG,EAAOxG,gBACvF9O,KAAK,SAAAC,GAAA,MAAQA,GAAKF,oDAOGN,GACxB,OAAO,EAAAE,EAAAC,UAAUE,SAAAA,UAAoBL,EAApB,wBAAmDO,KAAK,SAAAC,GAAA,MAAQA,GAAKF,gDAOlE0V,GACpB,OAAO,EAAA9V,EAAAC,UAAUE,SAAAA,uBAAiC2V,IAAiBzV,KAAK,SAAAC,GAAA,MAAQA,GAAKF,+CAOlE2V,GACnB,OAAO,EAAA/V,EAAAC,UACHE,SAAAA,sBACAD,OAAQ,OACRE,KAAM2V,IACP1V,KAAK,SAAAC,GAAA,MAAQA,GAAKF,+CAOF2V,EAAsBD,GACzC,OAAO,EAAA9V,EAAAC,UACHE,SAAAA,uBAAiC2V,EACjC1V,KAAM2V,EACN7V,OAAQ,UACTG,KAAK,SAAAC,GAAA,MAAQA,GAAKF,+CAOFN,GACnB,OAAO,EAAAE,EAAAC,UACHE,SAAAA,UAAoBL,EAApB,mBACDO,KAAK,SAAAC,GAAA,MAAQA,GAAKF,8CAOH4V,GAClB,OAAO,EAAAhW,EAAAC,UACHE,SAAAA,kBAA4B6V,IAC7B3V,KAAK,SAAAC,GAAA,MAAQA,GAAKF,0CAOP6V,GACd,OAAO,EAAAjW,EAAAC,UACHG,KAAM6V,EACN9V,SAAU,iBACVD,OAAQ,SACTG,KAAK,SAAAC,GAAA,MAAQA,GAAKF,0CAOP6V,EAAYD,GAC1B,OAAO,EAAAhW,EAAAC,UACHG,KAAM6V,EACN9V,SAAAA,kBAA4B6V,EAC5B9V,OAAQ,UACTG,KAAK,SAAAC,GAAA,MAAQA,GAAKF,0BArLRmV","file":"drivewealth-back-office.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"drivewealth-back-office\"] = factory();\n\telse\n\t\troot[\"drivewealth-back-office\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bee69e8bb6658746dc0e","// @flow\nimport Account from \"./modules/Account\";\nimport Auth from \"./modules/Auth\";\nimport Sessions from \"./internal/Sessions\";\nimport User from \"./modules/User\";\nimport Instrument from \"./modules/Instrument\";\nimport Transaction from \"./modules/Transaction\";\nimport Order from \"./modules/Order\";\nimport Commission from \"./modules/Commission\";\nimport Document from \"./modules/Document\";\nimport Reports from \"./modules/Reports\";\nimport Violation from \"./modules/Violation\";\nimport MoneyMovement from \"./modules/MoneyMovement\";\nimport Roles from \"./modules/Roles\";\nimport { Config, setup, ENVIRONMENTS, HOSTS } from \"./modules/Config\";\nimport request from \"./modules/request\";\nimport Advisors from \"./modules/Advisors\";\n\nexport {\n\tENVIRONMENTS,\n\tHOSTS,\n\n\tAccount,\n\tAdvisors,\n\tViolation,\n\tAuth,\n\tConfig,\n\tSessions,\n\tUser,\n\tInstrument,\n\tTransaction,\n\tOrder,\n\tCommission,\n\tDocument,\n\tReports,\n\tMoneyMovement,\n\tRoles,\n\n\tsetup,\n\trequest,\n};\n\nexport default {\n\tENVIRONMENTS,\n\tHOSTS,\n\n\tAccount,\n\tAdvisors,\n\tViolation,\n\tAuth,\n\tConfig,\n\tSessions,\n\tUser,\n\tInstrument,\n\tTransaction,\n\tOrder,\n\tCommission,\n\tDocument,\n\tReports,\n\tMoneyMovement,\n\tRoles,\n\n\tsetup,\n\trequest,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// @flow\nimport request from \"./request\";\nimport Violation from \"./Violation\";\nimport type {\n\tAccountDetails,\n\tBlotter,\n\tAccountTransferDetails,\n\tAccountTransferResponse,\n} from \"../types/Account\";\nimport type { ViolationCreateDetails } from \"../types/Violation\";\n\n/**\n * @module\n * @description Accounts are assigned to a user and a user can have many accounts. There are a\n * few attributes that define the account, how and when it can trade and who is trading it.\n * @example import { Account } from \"drivewealth-back-office-javascript\";\n */\nexport default class Account {\n\t/**\n\t * @constant\n\t * @property {string} CASH\n\t * @property {string} ORDERS\n\t * @property {string} TRANSACTIONS\n\t * @property {string} EQUITY\n\t * @property {string} VIOLATIONS\n\t * @property {string} ALL\n\t */\n\tstatic BLOTTER_TYPES = {\n\t\tCASH: \"cash\",\n\t\tORDERS: \"orders\",\n\t\tTRANSACTIONS: \"transactions\",\n\t\tEQUITY: \"equity\",\n\t\tVIOLATIONS: \"violations\",\n\t\tALL: null,\n\t};\n\n\t/**\n\t * Create a new account tied to a user.\n\t */\n\tstatic create(userID: string, details: {\n\t\taccountType: string,\n\t\taccountManagementType: string,\n\t\ttradingType: string,\n\t\triaID?: string,\n\t\triaProductID?: string,\n\t\tauthorizedUsers?: Array<{\n\t\t\tuserID: string,\n\t\t\tpermissions: Array<string>,\n\t\t}>,\n\t\tignoreBuyingPower?: boolean,\n\t\tviolationsExempt?: boolean,\n\t}): Promise<AccountDetails> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/accounts\",\n\t\t\tbody: {\n\t\t\t\t...details,\n\t\t\t\tuserID,\n\t\t\t},\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * Get account by accountID.\n\t */\n\tstatic get(accountID: string): Promise<AccountDetails> {\n\t\treturn request({\n\t\t\tendpoint: `/accounts/${accountID}`,\n\t\t}).then(data => data.body.account);\n\t}\n\n\t/**\n\t * Get account by accountNo.\n\t */\n\tstatic getByAccountNo(accountNo: string): Promise<{\n\t\taccountNo: string,\n\t\taccountID: string,\n\t\temailAddress1: string,\n\t\tfirstName: string,\n\t\tlastName: string,\n\t\tuserID: string,\n\t\tusername: string,\n\t\tuserType: number,\n\t}> {\n\t\treturn request({\n\t\t\tendpoint: `/accounts/search?accountNo=${accountNo.toUpperCase()}`,\n\t\t}).then(data => data.body.result);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic edit(accountID: string, details: ?Account): Promise<AccountDetails> {\n\t\treturn request({\n\t\t\tmethod: \"PATCH\",\n\t\t\tendpoint: `/accounts/${accountID}`,\n\t\t\tbody: details,\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * Get Account Summary. Optionally retrieve specific data with a [Blotter Type](#blottertypes).\n\t */\n\tstatic getBlotter(accountID: string, type?: string): Promise<Blotter> {\n\t\treturn request({\n\t\t\tmethod: \"GET\",\n\t\t\tendpoint: `/accounts/${accountID}/summary`,\n\t\t}).then(({ body: { accountSummary } }) => type ? accountSummary[type] : accountSummary);\n\t}\n\n\t/**\n\t * Transfer positions and/or cash from one account to another.\n\t */\n\tstatic transfer(details: AccountTransferDetails): Promise<AccountTransferResponse> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/accounts/transfer\",\n\t\t\tbody: {\n\t\t\t\t...details,\n\t\t\t\taccountFrom: details.accountFrom.toUpperCase(),\n\t\t\t\taccountTo: details.accountTo.toUpperCase(),\n\t\t\t},\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic createViolation(accountID: string, details: ViolationCreateDetails): Promise<void> {\n\t\treturn Violation.create(accountID, details);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getViolations(accountID: string): Promise<*> {\n\t\treturn Violation.get(accountID);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic deleteViolation(accountID: string, violationID: string): Promise<void> {\n\t\treturn Violation.delete(accountID, violationID);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic updateCommission(accountID: string, commissionID: string) {\n\t\treturn request({\n\t\t\tendpoint: `/accounts/${accountID}/commissions`,\n\t\t\tmethod: \"POST\",\n\t\t\tbody: { commissionID },\n\t\t}).then(data => data.body.account);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getMarginCallList(): Promise<Array<Object>> {\n\t\treturn request({\n\t\t\tendpoint: \"/accounts/margin-call\",\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getMarginCallAccountSummaries(): Promise<{\n\t\taccounts: Array<AccountDetails>,\n\t\tsummaries: Array<Blotter>,\n\t}> {\n\t\treturn Account.getMarginCallList().then(\n\t\t\taccounts => Promise.all(accounts.map(({ id }) => Account.getBlotter(id)))\n\t\t\t\t.then(summaries => ({ accounts, summaries })),\n\t\t);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic editPosition(\n\t\taccountID: string,\n\t\tsymbol: string,\n\t\tqty: number,\n\t\tprice?: number,\n\t): Promise<void> {\n\t\treturn request({\n\t\t\tendpoint: `/accounts/${accountID}/positions`,\n\t\t\tmethod: \"PATCH\",\n\t\t\tbody: {\n\t\t\t\tsymbol,\n\t\t\t\tquantityAdjustment: qty,\n\t\t\t\tprice,\n\t\t\t},\n\t\t}).then(() => {\n\t\t});\n\t}\n\n\t// I know Object is very bad type\n\tstatic getPortfolioStatus(accountID: string): Promise<Object> {\n\t\treturn request({\n\t\t\tendpoint: `/accounts/${accountID}/portfolio`,\n\t\t}).then(data => data.body);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Account.js","// @flow\nimport { Config, HOSTS } from \"./Config\";\nimport { DriveWealthError, DriveWealthSessionError } from \"./Error\";\nimport Sessions from \"../internal/Sessions\";\n\n/**\n * @function request\n * @description Normally, it is unnecessary to use this function and this is for internal use only.\n *  Call request() if you need to make a custom API call that is not covered by another function.\n * @param {object} options\n * @param {string} options.method\n * @param {string} options.endpoint\n * @param {string} options.sessionKey\n * @param {string} options.body\n * @param {Object.<string, string>} options.addlHeaders\n * @param {string} options.host - One of Config.HOSTS\n * @returns {Promise.<{body: string, statusCode: number, headers: Object<string, string>}>}\n */\nexport default function request({\n\tmethod = \"GET\",\n\tendpoint,\n\tsessionKey,\n\tbody,\n\taddlHeaders = {},\n\thost = HOSTS.API,\n\tauthenticated = true,\n\tusesAppKey = true,\n}: {\n\tmethod?: string,\n\tendpoint: string,\n\tsessionKey?: string,\n\tbody?: any,\n\taddlHeaders?: {[header: string]: string},\n\thost?: string,\n\tauthenticated?: boolean,\n\tusesAppKey?: boolean,\n}): Promise<{\n\tbody: *,\n\tstatusCode: number,\n\theaders: { [header: string]: string },\n}> {\n\tif (!Config.httpImpl) throw new Error(\"httpImpl is not setup!\");\n\tif (!sessionKey) {\n\t\tconst savedSessionKey = Sessions.get();\n\t\tif (savedSessionKey) sessionKey = savedSessionKey;\n\t}\n\n\tconst headers: {[header: string]: string} = {\n\t\tAccept: \"application/json\",\n\t};\n\tif (usesAppKey) {\n\t\theaders[\"dw-client-app-key\"] = Config.appKey;\n\t}\n\tif (method === \"POST\" || method === \"PUT\" || method === \"PATCH\") {\n\t\theaders[\"Content-Type\"] = \"application/json\";\n\t}\n\tif (sessionKey && authenticated) {\n\t\theaders[\"dw-auth-token\"] = sessionKey;\n\t}\n\tfor (const header in addlHeaders) {\n\t\theaders[header] = addlHeaders[header];\n\t}\n\n\tendpoint = Config.env[host] + endpoint;\n\n\tif (headers[\"Content-Type\"] === \"application/json\") body = JSON.stringify(body);\n\n\tif (addlHeaders && addlHeaders[\"Content-Type\"]) {\n\t\tif (!body) throw new Error(\"No body provided, but content-type header was set.\");\n\t\tif (\n\t\t\taddlHeaders[\"Content-Type\"] === \"application/x-www-form-urlencoded\"\n\t\t\t&& body instanceof Object\n\t\t\t&& body.constructor === Object\n\t\t) {\n\t\t\tconst mappableObj: Object = body;\n\t\t\tbody = Object.keys(mappableObj).map(\n\t\t\t\tkey => encodeURIComponent(key) + \"=\" + encodeURIComponent(mappableObj[key]),\n\t\t\t).join(\"&\");\n\t\t}\n\t}\n\n\treturn new Promise((resolve, reject) =>\n\t\tConfig.httpImpl(\n\t\t\tmethod,\n\t\t\tendpoint,\n\t\t\theaders,\n\t\t\tbody,\n\t\t\t(statusCode, resHeaders, resBody) => { // eslint-disable-line arrow-body-style\n\t\t\t\tconst contentType = resHeaders[\"Content-Type\"] || resHeaders[\"content-type\"] || \"\";\n\t\t\t\tif (resBody && contentType.indexOf(\"application/json\") !== -1) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresBody = JSON.parse(resBody);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t// resBody will remain as is\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (String(statusCode)[0] === \"2\" || String(statusCode)[0] === \"3\") {\n\t\t\t\t\treturn resolve({\n\t\t\t\t\t\tbody: resBody,\n\t\t\t\t\t\tstatusCode,\n\t\t\t\t\t\theaders: resHeaders,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tlet errorMessage = \"No error message was returned from the server.\";\n\t\t\t\tlet errorCode = \"-1\";\n\t\t\t\tif (resBody) {\n\t\t\t\t\tif (resBody.error) {\n\t\t\t\t\t\terrorMessage = resBody.error.message;\n\t\t\t\t\t\terrorCode = resBody.error.errorCode;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (resBody.message && resBody.errorCode) {\n\t\t\t\t\t\terrorMessage = resBody.message;\n\t\t\t\t\t\terrorCode = resBody.errorCode;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (resBody.verificationResponse) {\n\t\t\t\t\t\terrorMessage = resBody.verificationResponse.message;\n\t\t\t\t\t\terrorCode = \"-1\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (statusCode === 401) {\n\t\t\t\t\tConfig.onUnAuth();\n\t\t\t\t\treturn reject(new DriveWealthSessionError(\n\t\t\t\t\t\terrorMessage,\n\t\t\t\t\t\tresBody,\n\t\t\t\t\t\tstatusCode,\n\t\t\t\t\t\tresHeaders,\n\t\t\t\t\t\terrorCode,\n\t\t\t\t\t));\n\t\t\t\t}\n\n\t\t\t\treturn reject(new DriveWealthError(\n\t\t\t\t\terrorMessage,\n\t\t\t\t\tresBody,\n\t\t\t\t\tstatusCode,\n\t\t\t\t\tresHeaders,\n\t\t\t\t\terrorCode,\n\t\t\t\t));\n\t\t\t},\n\t\t));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/request.js","// @flow\ntype Environment = {\n\tapi: string,\n\treports: string,\n};\n\n/**\n * Servers to send a request to\n * @name HOSTS\n * @property {string} API\n * @property {string} APPS\n * @property {string} REPORTS\n * @memberof Config\n * @constant\n */\nexport const HOSTS = {\n\tAPI: \"api\",\n\tREPORTS: \"reports\",\n};\n\n/**\n * Servers to send a request to\n * @name ENVIRONMENTS\n * @property {object} UAT\n * @property {object} PROD\n * @memberof Config\n * @constant\n */\nexport const ENVIRONMENTS = {\n\tUAT: {\n\t\t[HOSTS.API]: \"http://bo-api.drivewealth.io/back-office\",\n\t\t[HOSTS.REPORTS]: \"http://reports.drivewealth.io\",\n\t},\n\tPROD: {\n\t\t[HOSTS.API]: \"https://bo-api.drivewealth.net/back-office\",\n\t\t[HOSTS.REPORTS]: \"https://reports.drivewealth.net\",\n\t},\n};\n\n/**\n * @module Config\n */\nexport const Config: {\n\tenv: Environment,\n\thttpImpl: Function,\n\tappVersion: string,\n\tappKey: string,\n\tonUnAuth: Function,\n} = {\n\tenv: ENVIRONMENTS.UAT,\n\thttpImpl: () => {},\n\tappVersion: \"UNSET\",\n\tappKey: \"UNSET\",\n\tonUnAuth() {},\n};\n\n/**\n * @example import drivewealth from \"drivewealth-back-office-javascript\";\n *\n * drivewealth.setup({\n *     env: drivewealth.ENVIRONMENTS.UAT,\n *     httpImpl: require(\"drivewealth-back-office-javascript/lib/httpImpls/request.js\"),\n *     appVersion: \"1.0\",\n *     appKey: process.env.BO_APP_KEY,\n * });\n */\nexport function setup({\n\tenv,\n\thttpImpl,\n\tappVersion,\n\tappKey,\n}: {\n\tenv: $PropertyType<typeof Config, \"env\">,\n\thttpImpl: $PropertyType<typeof Config, \"httpImpl\">,\n\tappVersion: $PropertyType<typeof Config, \"appVersion\">,\n\tappKey: $PropertyType<typeof Config, \"appKey\">,\n}) {\n\tConfig.env = env;\n\tConfig.httpImpl = httpImpl;\n\tConfig.appVersion = appVersion;\n\tConfig.appKey = appKey;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Config.js","// @flow\nimport ExtendableError from \"extendable-error-class\";\n\n/**\n * @class DriveWealthError\n */\nexport class DriveWealthError extends ExtendableError {\n\tconstructor(\n\t\tmessage: string,\n\t\tbody: Object,\n\t\tstatusCode: number,\n\t\theaders: { [header: string]: string },\n\t\terrorCode: string,\n\t) {\n\t\tsuper(message);\n\t\tthis.body = body;\n\t\tthis.statusCode = statusCode;\n\t\tthis.headers = headers;\n\t\tthis.errorCode = errorCode;\n\t}\n}\n\n/**\n * @class DriveWealthSessionError\n */\nexport class DriveWealthSessionError extends ExtendableError {\n\tconstructor(\n\t\tmessage: string,\n\t\tbody: Object,\n\t\tstatusCode: number,\n\t\theaders: { [header: string]: string },\n\t\terrorCode: string,\n\t) {\n\t\tsuper(message);\n\t\tthis.body = body;\n\t\tthis.statusCode = statusCode;\n\t\tthis.headers = headers;\n\t\tthis.errorCode = errorCode;\n\t}\n}\n\nexport default {\n\tDriveWealthError,\n\tDriveWealthSessionError,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Error.js","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _extendableBuiltin(cls) {\n    function ExtendableBuiltin() {\n        var instance = Reflect.construct(cls, Array.from(arguments));\n        Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n        return instance;\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n        constructor: {\n            value: cls,\n            enumerable: false,\n            writable: true,\n            configurable: true\n        }\n    });\n\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ExtendableBuiltin, cls);\n    } else {\n        ExtendableBuiltin.__proto__ = cls;\n    }\n\n    return ExtendableBuiltin;\n}\n\nvar ExtendableError = function (_extendableBuiltin2) {\n    _inherits(ExtendableError, _extendableBuiltin2);\n\n    function ExtendableError(message) {\n        _classCallCheck(this, ExtendableError);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ExtendableError).call(this, message));\n\n        _this.name = _this.constructor.name;\n        _this.message = message;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, _this.constructor);\n        } else {\n            _this.stack = new Error(message).stack;\n        }\n        return _this;\n    }\n\n    return ExtendableError;\n}(_extendableBuiltin(Error));\n\nmodule.exports = ExtendableError;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extendable-error-class/dist/index.es5.js\n// module id = 5\n// module chunks = 0","// @flow\nclass Sessions {\n\tkey: ?string;\n\n\tconstructor() {\n\t\tthis.key = null;\n\t}\n\n\tget() {\n\t\treturn this.key;\n\t}\n\n\tsave(key: string) {\n\t\tthis.key = key;\n\t}\n\n\tremove() {\n\t\tthis.key = null;\n\t}\n}\n\nexport const sessions = new Sessions();\nexport default sessions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/internal/Sessions.js","// @flow\nimport request from \"./request\";\nimport type { ViolationCreateDetails } from \"../types/Violation\";\n\n/**\n * @module\n * @example import { Violation } from \"drivewealth-back-office-javascript\";\n */\nexport default class Violation {\n\t/**\n\t * Create a new violation tied to an account.\n\t */\n\tstatic create(accountID: string, details: ViolationCreateDetails): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: `/accounts/${accountID}/violations`,\n\t\t\tbody: details,\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * Get violations of an account.\n\t */\n\tstatic get(accountID: string): Promise<{\n\t\tgoodFaithViolations: Array<Violation>,\n\t\tpatternDayTrades: number | null,\n\t\tlegacyGoodFaithViolations: number,\n\t\tmessage: string,\n\t}> {\n\t\treturn request({ endpoint: `/accounts/${accountID}/violations` }).then(data => data.body);\n\t}\n\n\t/**\n\t * Delete a violation from an account.\n\t */\n\tstatic delete(accountID: string, violationID: string): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"DELETE\",\n\t\t\tendpoint: `/accounts/${accountID}/violations/${violationID}`,\n\t\t}).then(() => undefined);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Violation.js","// @flow\nimport request from \"./request\";\nimport { Config } from \"./Config\";\nimport Sessions from \"../internal/Sessions\";\n\n/**\n * @class Auth\n * @example import { Auth } from \"drivewealth-back-office-javascript\";\n */\nexport default class Auth {\n\tstatic pendingTempCode = null;\n\tstatic pendingUsername = null;\n\tstatic pending2FAType = null;\n\n\t/**\n\t * @constant\n\t * @property {string} SMS\n\t */\n\tstatic VERIFICATION_TYPES = {\n\t\tSMS: \"sms\",\n\t};\n\n\t/**\n\t * @static\n\t */\n\tstatic login(username: string, password: string): Promise<Object> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/auth\",\n\t\t\tbody: {\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t\tappVersion: Config.appVersion,\n\n\t\t\t\tip_address: \"unknown\",\n\t\t\t\tlanguageID: \"en_US\",\n\t\t\t\tosVersion: \"unknown\",\n\t\t\t\tosType: \"unknown\",\n\t\t\t\tscrRes: \"unknown\",\n\t\t\t\tappTypeID: 4,\n\t\t\t},\n\t\t}).then(({ body }) => {\n\t\t\tif (body.authToken) {\n\t\t\t\tSessions.save(body.authToken);\n\t\t\t\treturn body;\n\t\t\t}\n\n\t\t\tAuth.pendingTempCode = body.tempCode;\n\t\t\tAuth.pendingUsername = body.username;\n\t\t\tdelete body.tempCode;\n\t\t\tdelete body.username;\n\t\t\treturn body;\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic issue2FACode(type: string): Promise<Object> {\n\t\tif (!Auth.pendingTempCode) throw new Error(\"No login pending. Call Auth.login() first!\");\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/auth/2fa\",\n\t\t\tbody: {\n\t\t\t\tusername: Auth.pendingUsername,\n\t\t\t\ttempCode: Auth.pendingTempCode,\n\t\t\t\t\"2FAType\": type,\n\t\t\t\tlocale: \"en\",\n\t\t\t},\n\t\t}).then(({ body }) => {\n\t\t\tAuth.pending2FAType = type;\n\t\t\treturn body;\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic verify2FACode(code: string): Promise<Object> {\n\t\tif (!Auth.pending2FAType) {\n\t\t\tthrow new Error(\"No login pending. Call Auth.login(), then Auth.issue2FACode() first.\");\n\t\t}\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/auth/2fa/verification\",\n\t\t\tbody: {\n\t\t\t\tusername: Auth.pendingUsername,\n\t\t\t\ttempCode: Auth.pendingTempCode,\n\t\t\t\t\"2FAType\": Auth.pending2FAType,\n\t\t\t\tverificationCode: code,\n\t\t\t},\n\t\t}).then(({ body }) => {\n\t\t\tAuth.pendingTempCode = null;\n\t\t\tAuth.pendingUsername = null;\n\t\t\tAuth.pending2FAType = null;\n\t\t\tSessions.save(body.authResponse.authToken);\n\t\t\treturn body.authResponse;\n\t\t});\n\t}\n\n\tstatic onUnAuth(callback: Function) {\n\t\tConfig.onUnAuth = callback;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Auth.js","// @flow\nimport request from \"./request\";\nimport Account from \"./Account\";\nimport Document from \"./Document\";\nimport { getPendingCounts, getPending } from \"../internal/documents\";\nimport type {\n\tUserCreateDetails,\n\tUserBasic,\n\tNote,\n\tNoteSubject,\n\tKYCUser,\n\tUserDetails,\n\tUserSearchResult,\n} from \"../types/User\";\nimport type { AccountDetails } from \"../types/Account\";\nimport type { PendingCount, PendingDocument } from \"../types/Document\";\n\n/**\n * @module\n * @description The Users API allows you to create a multitude of users.\n * @example import { User } from \"drivewealth-back-office-javascript\";\n */\nexport default class User {\n\t/**\n\t * Create a new user.\n\t */\n\tstatic create(details: UserCreateDetails): Promise<UserBasic> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/users\",\n\t\t\tbody: details,\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * Get specific details about a particular user.\n\t */\n\tstatic get(userID: string): Promise<UserDetails> {\n\t\treturn request({ endpoint: \"/users/\" + userID }).then(data => data.body);\n\t}\n\n\t/**\n\t * Edit information on a particular user.\n\t */\n\tstatic edit(userID: string, details: ?UserCreateDetails): Promise<UserDetails> {\n\t\treturn request({\n\t\t\tmethod: \"PATCH\",\n\t\t\tendpoint: \"/users/\" + userID,\n\t\t\tbody: details,\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getNotes(userID: string): Promise<Array<Note>> {\n\t\treturn request({\n\t\t\tendpoint: `/users/${userID}/notes`,\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic createNote(userID: string, note: string, subject: NoteSubject): Promise<Note> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: `/users/${userID}/notes`,\n\t\t\tbody: {\n\t\t\t\tuserID,\n\t\t\t\tsubject: JSON.stringify(subject),\n\t\t\t\tnote,\n\t\t\t},\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * Get accounts that belong to a user.\n\t */\n\tstatic getAccounts(userID: string): Promise<Array<AccountDetails>> {\n\t\treturn request({ endpoint: `/users/${userID}/accounts` }).then(data => data.body);\n\t}\n\n\t/**\n\t * Search for users based on one or more fields contained in a query object.\n\t */\n\tstatic advancedSearch(searchQuery: {|\n\t\tusername?: string,\n\t\tfirstName?: string,\n\t\tlastName?: string,\n\t\tphoneNumber?: string,\n\t\temail?: string,\n\t|}): Promise<Array<UserDetails>> {\n\t\treturn request({\n\t\t\tendpoint: `/users/search?${Object.keys(searchQuery)\n\t\t\t\t.filter(key => searchQuery[key])\n\t\t\t\t.map(key => `${key}=${encodeURIComponent(String(searchQuery[key]))}`)\n\t\t\t\t.join(\"&\")}`,\n\t\t}).then(data => data.body.resultSet);\n\t}\n\n\t/**\n\t * @constant\n\t * @property {RegExp} accountNo\n\t * @property {RegExp} userID\n\t * @property {RegExp} accountID\n\t * @property {RegExp} phoneNumber\n\t * @property {RegExp} fullName\n\t */\n\tstatic REGEXPS = {\n\t\taccountNo: /^[A-Za-z]{4}\\d{6}$/,\n\t\tuserID: /^[A-Za-z\\d]{8}-[A-Za-z\\d]{4}-[A-Za-z\\d]{4}-[A-Za-z\\d]{4}-[A-Za-z\\d]{12}$/,\n\t\t// eslint-disable-next-line max-len\n\t\taccountID: /^[A-Za-z\\d]{8}-[A-Za-z\\d]{4}-[A-Za-z\\d]{4}-[A-Za-z\\d]{4}-[A-Za-z\\d]{12}\\.\\d{13}$/,\n\t\tphoneNumber: /^\\d{4}$/,\n\t\tfullName: /\\S+ \\S+/,\n\t};\n\n\tstatic getFieldsToSearch(rawQuery: string) {\n\t\tconst fields = [\"accountNo\", \"userID\", \"accountID\", \"phoneNumber\", \"fullName\"];\n\n\t\tfor (const field of fields) {\n\t\t\tif (User.REGEXPS[field].test(rawQuery)) {\n\t\t\t\treturn [field];\n\t\t\t}\n\t\t}\n\n\t\treturn [\"username\", \"firstName\", \"lastName\", \"email\"];\n\t}\n\n\tstatic getSearchQuery(rawQuery: string): { [field: string]: string } {\n\t\treturn User.getFieldsToSearch(rawQuery)\n\t\t\t.reduce((searchQuery, field) => ({\n\t\t\t\t...searchQuery,\n\t\t\t\t[field]: rawQuery,\n\t\t\t}), {});\n\t}\n\n\t/**\n\t * Search for users.\n\t *\n\t * @param {string} rawQuery can be a userID, accountNo, accountID,\n\t * phoneNumber, fullName, username, firstName, lastName, or email.\n\t */\n\tstatic search(rawQuery: string): Promise<Array<UserDetails | UserSearchResult>> {\n\t\tconst searchQuery = User.getSearchQuery(rawQuery);\n\n\t\t// each type of query may use a different request method\n\t\tconst requests: Array<Promise<UserDetails | Array<UserDetails> | Array<UserSearchResult>>> =\n\t\t\tObject.keys(searchQuery)\n\t\t\t\t.map(field => {\n\t\t\t\t\tconst value = searchQuery[field].trim();\n\t\t\t\t\tswitch (field) {\n\t\t\t\t\t\tcase \"userID\":\n\t\t\t\t\t\t\treturn User.get(value);\n\n\t\t\t\t\t\tcase \"accountNo\":\n\t\t\t\t\t\t\treturn Account.getByAccountNo(value).then(\n\t\t\t\t\t\t\t\taccount => User.get(account.userID),\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tcase \"accountID\":\n\t\t\t\t\t\t\treturn Account.get(value).then(\n\t\t\t\t\t\t\t\taccount => User.get(account.userID),\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tcase \"fullName\": {\n\t\t\t\t\t\t\tconst [first, last] = value.split(/\\s/);\n\n\t\t\t\t\t\t\treturn request({\n\t\t\t\t\t\t\t\tendpoint: `/users/search?firstName=${first}&lastName=${last}`,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.then((data): Array<UserSearchResult> => data.body.resultSet);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase \"username\":\n\t\t\t\t\t\tcase \"firstName\":\n\t\t\t\t\t\tcase \"lastName\":\n\t\t\t\t\t\tcase \"phoneNumber\":\n\t\t\t\t\t\tcase \"email\":\n\t\t\t\t\t\t\treturn request({\n\t\t\t\t\t\t\t\tendpoint: `/users/search?${field}=${value}`,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.then((data): Array<UserSearchResult> => data.body.resultSet);\n\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`Attempted to search for an unknown query type (${field})`,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\treturn Promise.all(requests)\n\t\t\t.then(responses => {\n\t\t\t\t// transform nested array into single-level array\n\t\t\t\tconst results: Array<UserDetails | UserSearchResult> = responses.reduce(\n\t\t\t\t\t(acc, next) => [...acc, ...(Array.isArray(next) ? next : [next])],\n\t\t\t\t\t[],\n\t\t\t\t);\n\n\t\t\t\t// remove duplicate results by converting from array to object and back to array\n\t\t\t\tconst resultsByID: { [userID: string]: Object } = results.reduce(\n\t\t\t\t\t(acc, next: UserDetails | UserSearchResult) => {\n\t\t\t\t\t\t// Can we simplify this type? Couldn't find a way to make it simpler in Flow\n\t\t\t\t\t\tconst userID: string = typeof next.id === \"string\" ? next.id :\n\t\t\t\t\t\t\ttypeof next.userID === \"string\" ? next.userID : \"\";\n\n\t\t\t\t\t\treturn Object.assign({}, acc, { [userID]: next });\n\t\t\t\t\t},\n\t\t\t\t\t{},\n\t\t\t\t);\n\t\t\t\treturn Object.keys(resultsByID).map(key => resultsByID[key]);\n\t\t\t});\n\t}\n\n\t/**\n\t * Get documents that belong to a user.\n\t */\n\tstatic getDocuments(userID: string): Promise<Array<Document>> {\n\t\treturn request({\n\t\t\tendpoint: `/users/${userID}/documents`,\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * Creates a new document from a base64 image string or a JavaScript Image file.\n\t */\n\tstatic createDocument(userID: string, type: string, image: string | File): Promise<void> {\n\t\treturn Document.create(userID, type, image);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic openDocument(documentID: string): Promise<string> {\n\t\treturn Document.getURL(documentID);\n\t}\n\n\t/**\n\t * static\n\t */\n\tstatic getKYCUsers(): Promise<Array<KYCUser>> {\n\t\treturn request({\n\t\t\tendpoint: \"/users/kyc-exception\",\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic patchKYCUsers(method: string, ...userIDs: Array<string>): Promise<void> {\n\t\treturn Promise.all(\n\t\t\tuserIDs.map(userID => request({\n\t\t\t\tendpoint: `/users/kyc-exception/${userID}`,\n\t\t\t\tmethod: \"PATCH\",\n\t\t\t\tbody: {\n\t\t\t\t\tmethod: method.toUpperCase(),\n\t\t\t\t},\n\t\t\t})),\n\t\t)\n\t\t// if the method declaration says it returns void, it should\n\t\t\t.then(() => {});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getPendingCounts(): Promise<Array<PendingCount>> {\n\t\treturn getPendingCounts(\"users\");\n\t}\n\n\t/**\n\t * @static\n\t * @param query\n\t */\n\tstatic getPending(query: Array<string> | string): Promise<Array<PendingDocument>> {\n\t\treturn getPending(\"nextPendingUserApproval\", query);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic review(userID: string): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/users/review\",\n\t\t\tbody: { userID },\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic updateUserRole(\n\t\tpermissionGroupID: string,\n\t\tuserID: string,\n\t): Promise<UserDetails> {\n\t\tconst type = \"PERMISSIONS_INFO\";\n\t\tconst body = {\n\t\t\t\"documents\": [{\n\t\t\t\ttype,\n\t\t\t\tdata: {\n\t\t\t\t\tid: permissionGroupID,\n\t\t\t\t},\n\t\t\t}],\n\t\t};\n\n\t\treturn request({\n\t\t\tmethod: \"PATCH\",\n\t\t\tendpoint: `/users/${userID}`,\n\t\t\tbody,\n\t\t}).then(data => data.body);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/User.js","// @flow\nimport request from \"./request\";\nimport User from \"./User\";\nimport { getPendingCounts, getPending } from \"../internal/documents\";\nimport type { PendingCount, PendingDocuments, ReviewedDocument } from \"../types/Document\";\n\n/**\n * @module\n * In order to prove the identity of a client, they must provide documentary proof\n * of their identity.\n */\nexport default class Document {\n\t/**\n\t * @constant\n\t * @property {string} CASH\n\t * @property {string} ORDERS\n\t * @property {string} TRANSACTIONS\n\t * @property {string} EQUITY\n\t * @property {string} VIOLATIONS\n\t * @property {string} ALL\n\t */\n\tstatic DOCUMENT_TYPES = {\n\t\tPHOTO_ID: \"PICTURE_ID\",\n\t\tADDRESS: \"PROOF_OF_ADDRESS\",\n\t\tPHOTO_ID_AND_ADDRESS: \"PICTURE_ID_PROOF_OF_ADDRESS\",\n\t\tCORPORATE: \"CORPORATE\",\n\t\tTRUST: \"TRUST_DOCUMENTS\",\n\t\tRISK: \"RISK_ASSESSMENT\",\n\t\tTAX: \"TAX\",\n\t\tOTHER: \"OTHER\",\n\t};\n\n\t/**\n\t * @constant\n\t * @property {object} PICTURE\n\t * @property {string} PICTURE.INVALID\n\t * @property {string} PICTURE.MISMATCH_NAME\n\t * @property {string} PICTURE.ILLEGIBLE\n\t * @property {string} PICTURE.EXPIRED\n\t * @property {string} PICTURE.OTHER\n\t * @property {object} ADDRESS\n\t * @property {string} ADDRESS.INVALID\n\t * @property {string} ADDRESS.MISMATCH_NAME\n\t * @property {string} ADDRESS.ILLEGIBLE\n\t * @property {string} ADDRESS.EXPIRED\n\t * @property {string} ADDRESS.OTHER\n\t */\n\tstatic REJECTION_REASONS = {\n\t\tPICTURE: {\n\t\t\tINVALID: \"PICTURE_INVALID_DOCUMENT_TYPE\",\n\t\t\tMISMATCH_NAME: \"PICTURE_MISMATCH_NAME\",\n\t\t\tILLEGIBLE: \"PICTURE_ILLEGIBLE\",\n\t\t\tEXPIRED: \"PICTURE_EXPIRED\",\n\t\t\tOTHER: \"PICTURE_OTHER\",\n\t\t},\n\t\tADDRESS: {\n\t\t\tINVALID: \"ADDRESS_INVALID_DOCUMENT_TYPE\",\n\t\t\tMISMATCH_ADDRESS: \"ADDRESS_MISMATCH_ADDRESS\",\n\t\t\tMISMATCH_NAME: \"ADDRESS_MISMATCH_NAME\",\n\t\t\tILLEGIBLE: \"ADDRESS_ILLEGIBLE\",\n\t\t\tEXPIRED: \"ADDRESS_EXPIRED\",\n\t\t\tOTHER: \"ADDRESS_OTHER\",\n\t\t},\n\t};\n\n\t/**\n\t * @constant\n\t * @property {string} ENGLISH\n\t * @property {string} CHINESE\n\t * @property {string} SPANISH\n\t * @property {string} PORTUGUESE\n\t */\n\tstatic LANGUAGE_IDS = {\n\t\tENGLISH: \"en_US\",\n\t\tCHINESE: \"zh_CN\",\n\t\tSPANISH: \"es_ES\",\n\t\tPORTUGUESE: \"pt_BR\",\n\t};\n\n\t/**\n\t * Upload documentary proof of identity for a {@link User}.\n\t * @param image A base64 image string or file\n\t */\n\tstatic create(userID: string, type: string, image: string | File): Promise<void> {\n\t\tif (typeof image === \"string\") {\n\t\t\treturn request({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tendpoint: \"/documents\",\n\t\t\t\tbody: {\n\t\t\t\t\tuserID,\n\t\t\t\t\ttype,\n\t\t\t\t\tdocument: image,\n\t\t\t\t},\n\t\t\t\taddlHeaders: {\n\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t},\n\t\t\t}).then(() => undefined);\n\t\t}\n\n\t\tconst body = new FormData();\n\n\t\tbody.append(\"userID\", userID);\n\t\tbody.append(\"documentType\", type);\n\t\tbody.append(\"documentImage\", image);\n\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/documents\",\n\t\t\tbody,\n\t\t\taddlHeaders: {\n\t\t\t\t\"Content-Type\": \"multipart/form-data\",\n\t\t\t},\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * Get details about a document.\n\t */\n\tstatic get(documentID: string): Promise<Document> {\n\t\treturn request({\n\t\t\tendpoint: \"/documents/\" + documentID,\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * Get documents that belong to a {@link User}\n\t */\n\tstatic getByUserID(userID: string): Promise<Array<Document>> {\n\t\treturn User.getDocuments(userID);\n\t}\n\n\t/**\n\t * Get back a temporary URL to access the file. Access will timeout after 5 minutes.\n\t */\n\tstatic getURL(documentID: string): Promise<string> {\n\t\treturn request({\n\t\t\tendpoint: `/documents/${documentID}/url`,\n\t\t}).then(data => data.body.url);\n\t}\n\n\t/**\n\t * Get details about all documents in the queue.\n\t */\n\tstatic getPendingCounts(): Promise<Array<PendingCount>> {\n\t\treturn getPendingCounts(\"documents\");\n\t}\n\n\t/**\n\t * Get pending documents for a {@link User} in the queue.\n\t * @param query either a userID string or an array of language IDs\n\t */\n\tstatic getPending(query: Array<string> | string): Promise<PendingDocuments> {\n\t\treturn getPending(\"nextPending\", query);\n\t}\n\n\t/**\n\t * Update a {@link User}'s document language.\n\t */\n\tstatic updateLanguage(userID: string, languageID: string): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"PATCH\",\n\t\t\tendpoint: \"/documents/updateLanguage\",\n\t\t\tbody: {\n\t\t\t\tuserID,\n\t\t\t\tlanguageID,\n\t\t\t},\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * Approve or reject a {@link User}'s documents.\n\t */\n\tstatic review(\n\t\tuserID: string,\n\t\treviewerUserID: string,\n\t\tdocuments: Array<ReviewedDocument>,\n\t): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/documents/review\",\n\t\t\tbody: {\n\t\t\t\tuserID,\n\t\t\t\tapprovedByUserID: reviewerUserID,\n\t\t\t\tdocuments,\n\t\t\t},\n\t\t}).then(() => undefined);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Document.js","// @flow\nimport request from \"../modules/request\";\n\nexport const getPendingCounts = (path: string) => request({\n\tendpoint: `/${path}/getPendingCounts`,\n}).then(data => data.body);\n\nexport const getPending = (path: string, query: Array<string> | string) => {\n\tconst queryString = Array.isArray(query) ?\n\t\t`languageList=${query.join(\",\")}` :\n\t\t`userID=${query}`;\n\n\treturn request({\n\t\tendpoint: `/users/${path}?${queryString}`,\n\t}).then(data => Object.assign({}, data.body, {\n\t\tttl: Number(data.headers[\"dw-reviewer-ttl\"]),\n\t}));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/internal/documents.js","// @flow\nimport request from \"./request\";\nimport type {\n\tInstrumentBasic,\n\tInstrumentCreateDetails,\n\tCorporateActionEventTypes,\n} from \"../types/Instrument\";\n\n/**\n * @module\n * @description Instruments are the investment products available to buy and sell\n * on the DriveWealth platform.\n * @example import { Instrument } from \"drivewealth-back-office-javascript\";\n */\nexport default class Instrument {\n\t/**\n\t * Create a new instrument from instrument data.\n\t */\n\tstatic create(details: InstrumentCreateDetails): Promise<Instrument> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/instruments\",\n\t\t\tbody: details,\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * Get details on a particular instrument.\n\t */\n\tstatic get(instrumentID: string): Promise<Instrument> {\n\t\treturn request({\n\t\t\tendpoint: `/instruments/${instrumentID}`,\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic edit(\n\t\tinstrumentID: string,\n\t\tdetails: InstrumentCreateDetails,\n\t): Promise<Instrument> {\n\t\treturn request({\n\t\t\tmethod: \"PATCH\",\n\t\t\tendpoint: `/instruments/${instrumentID}`,\n\t\t\tbody: details,\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * List all instruments.\n\t */\n\tstatic getAll(): Promise<Array<InstrumentBasic>> {\n\t\treturn request({\n\t\t\tendpoint: \"/instruments\",\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getCorporateActionEventTypes(): Promise<CorporateActionEventTypes> {\n\t\treturn request({\n\t\t\tendpoint: \"/instruments/corporateActionEventTypes\",\n\t\t}).then(data => data.body);\n\t}\n\n\tstatic formatValue(key: string, value: any): string {\n\t\tswitch (key) {\n\t\t\tcase \"startDate\":\n\t\t\tcase \"endDate\":\n\t\t\t\treturn value.toISOString();\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getCorporateActions(query: {\n\t\tsymbols?: Array<string>,\n\t\teventTypes?: Array<string>,\n\t\tstartDate?: Date,\n\t\tendDate?: Date,\n\t} = {}) {\n\t\treturn request({\n\t\t\tendpoint: \"/instruments/corporateActions?\" + Object.keys(query)\n\t\t\t\t.reduce((x, y) => [...x, `${y}=${Instrument.formatValue(y, query[y])}`], [])\n\t\t\t\t.join(\"&\"),\n\t\t}).then(data => data.body);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Instrument.js","// @flow\nimport type {\n\tTransactionType,\n\tTransactionTypeList,\n\tTransactionCreateResponse,\n\tTransactionDetails,\n\tTransactionBatchResponse,\n\tPaginationOptions,\n} from \"../types/Transaction\";\nimport request from \"./request\";\n\n/**\n * @module\n * @description Transactions have unique types.\n * @example import { Transaction } from \"drivewealth-back-office-javascript\";\n */\nexport default class Transaction {\n\t/**\n\t * Transaction types include deposits, withdrawals, journals and fees.\n\t */\n\tstatic getAllTransactionTypes(): Promise<Array<TransactionTypeList>> {\n\t\treturn request({ endpoint: \"/transactions/types\" }).then(data => data.body);\n\t}\n\n\t/**\n\t * Get back only relevant Transaction Types by specifying a wlpID.\n\t */\n\tstatic getTransactionTypes(wlpID: string = \"DW\"): Promise<Array<TransactionType>> {\n\t\treturn request({\n\t\t\tendpoint: `/transactions/types?wlpID=${wlpID}`,\n\t\t}).then(data => data.body[0].types);\n\t}\n\n\t/**\n\t * Create a new Transaction.\n\t */\n\tstatic create(accountID: string, details: {\n\t\tamount: number,\n\t\tcomment: string,\n\t\tsource: string,\n\t\twlpFinTranTypeID: string,\n\t}): Promise<TransactionCreateResponse> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: `/accounts/${accountID}/transactions`,\n\t\t\tbody: details,\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * Get transactions by account and date.\n\t */\n\tstatic get(\n\t\taccountID: string,\n\t\tstartDate: Date,\n\t\tendDate: Date,\n\t\toptions?: PaginationOptions,\n\t): Promise<Array<TransactionDetails>> {\n\t\tconst base = `/accounts/${accountID}/transactions`;\n\t\tconst dateRange = `?from=${startDate.toISOString()}&to=${endDate.toISOString()}`;\n\t\tlet limit;\n\t\tif (options && options.limit) {\n\t\t\tlimit = options.limit;\n\t\t} else {\n\t\t\tlimit = 40;\n\t\t}\n\t\tconst limitParam = `&limit=${limit}`;\n\t\tlet url = base + dateRange + limitParam;\n\n\t\tif (options && options.direction && options.offset) {\n\t\t\turl += `&offset=${options.offset}&direction=${options.direction}`;\n\t\t}\n\n\t\treturn request({ endpoint: url }).then(data => data.body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic batch(transactions: Array<{\n\t\taccountNo: string,\n\t\ttransactionType: string,\n\t\tbatchCode: string,\n\t\tamount: number,\n\t\tcomment: string,\n\t}>): Promise<Array<TransactionBatchResponse>> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: \"/transactions/batch\",\n\t\t\tbody: transactions,\n\t\t}).then(data => data.body);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Transaction.js","// @flow\nimport type { OrderCreateDetails, OrderCreateResponse } from \"../types/Order\";\nimport request from \"./request\";\nimport Account from \"./Account\";\nimport { DriveWealthError } from \"./Error\";\n\n/**\n * @module\n * @example import { Order } from \"drivewealth-back-office-javascript\";\n */\nexport default class Order {\n\t/**\n\t * @constant\n\t * @property {string} MARKET\n\t * @property {string} LIMIT\n\t * @property {string} STOP\n\t */\n\tstatic TYPES = {\n\t\tMARKET: \"MARKET\",\n\t\tLIMIT: \"LIMIT\",\n\t\tSTOP: \"STOP\",\n\t};\n\n\t/**\n\t * @constant\n\t * @property {string} BUY\n\t * @property {string} SELL\n\t */\n\tstatic SIDES = {\n\t\tBUY: \"BUY\",\n\t\tSELL: \"SELL\",\n\t};\n\n\t/**\n\t * Create a manual entry order for a particular account.\n\t */\n\tstatic create(\n\t\taccount: {\n\t\t\taccountID: string,\n\t\t\taccountNo: string,\n\t\t},\n\t\torder: OrderCreateDetails,\n\t\toptions: {\n\t\t\twaitForFill?: boolean,\n\t\t\tfillRetryInterval: number,\n\t\t\tfillMaxRetries: number,\n\t\t} = {\n\t\t\twaitForFill: true,\n\t\t\tfillRetryInterval: 1000,\n\t\t\tfillMaxRetries: 10,\n\t\t},\n\t): Promise<OrderCreateResponse> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\trequest({\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tendpoint: \"/orders\",\n\t\t\t\tbody: {\n\t\t\t\t\taccountNo: account.accountNo,\n\t\t\t\t\t...order,\n\t\t\t\t},\n\t\t\t}).then(data => {\n\t\t\t\tconst order = data.body;\n\n\t\t\t\tif (options.waitForFill) {\n\t\t\t\t\tconst checkSummary = () => {\n\t\t\t\t\t\toptions.fillMaxRetries--;\n\n\t\t\t\t\t\tAccount.getBlotter(account.accountID).then(summary => {\n\t\t\t\t\t\t\tfor (const transaction of summary.transactions) {\n\t\t\t\t\t\t\t\tif (transaction.orderId === order.orderID) {\n\t\t\t\t\t\t\t\t\tconst isRejected: boolean = transaction.orderStatus == \"8\";\n\t\t\t\t\t\t\t\t\tconst isFilled: boolean = transaction.orderStatus == \"2\";\n\t\t\t\t\t\t\t\t\tconst notMarket: boolean = transaction.orderType != \"1\";\n\n\t\t\t\t\t\t\t\t\tif (isRejected) {\n\t\t\t\t\t\t\t\t\t\tlet errorCode = \"-1\";\n\t\t\t\t\t\t\t\t\t\tlet errorMessage = \"Unknown rejection reason\";\n\t\t\t\t\t\t\t\t\t\tconst reason: string = transaction.updatedReason;\n\t\t\t\t\t\t\t\t\t\tconst error = reason.match(/^\\s*(-?\\d+) (.+)$/);\n\n\t\t\t\t\t\t\t\t\t\tif (Array.isArray(error) && error[1] && error[2]) {\n\t\t\t\t\t\t\t\t\t\t\terrorCode = error[1];\n\t\t\t\t\t\t\t\t\t\t\terrorMessage = error[2];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn reject(new DriveWealthError(\n\t\t\t\t\t\t\t\t\t\t\terrorMessage,\n\t\t\t\t\t\t\t\t\t\t\tdata.body,\n\t\t\t\t\t\t\t\t\t\t\tdata.statusCode,\n\t\t\t\t\t\t\t\t\t\t\tdata.headers,\n\t\t\t\t\t\t\t\t\t\t\terrorCode,\n\t\t\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t\t\t} else if (isFilled || notMarket ||\n\t\t\t\t\t\t\t\t\t\toptions.fillMaxRetries === 0) {\n\t\t\t\t\t\t\t\t\t\tconst orderDetails = {\n\t\t\t\t\t\t\t\t\t\t\t...order,\n\t\t\t\t\t\t\t\t\t\t\t...transaction,\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\tdelete orderDetails.orderId;\n\n\t\t\t\t\t\t\t\t\t\treturn resolve(orderDetails);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Only reached if the order wasn't found\n\t\t\t\t\t\t\tif (options.fillMaxRetries === 0) {\n\t\t\t\t\t\t\t\treturn reject(new DriveWealthError(\n\t\t\t\t\t\t\t\t\t`No details found for Order No: ${order.orderNo}`,\n\t\t\t\t\t\t\t\t\tdata.body,\n\t\t\t\t\t\t\t\t\tdata.statusCode,\n\t\t\t\t\t\t\t\t\tdata.headers,\n\t\t\t\t\t\t\t\t\t\"-1\",\n\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetTimeout(checkSummary, options.fillRetryInterval);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).catch(reject);\n\t\t\t\t\t};\n\n\t\t\t\t\tcheckSummary();\n\t\t\t\t} else {\n\t\t\t\t\treturn resolve(order);\n\t\t\t\t}\n\t\t\t}).catch(reject);\n\t\t});\n\t}\n\n\t/**\n\t * Make changes to an order.\n\t */\n\tstatic reconcile(orderID: string, details: ?OrderCreateDetails): Promise<void> {\n\t\treturn request({\n\t\t\tmethod: \"PUT\",\n\t\t\tendpoint: `/orders/${orderID}`,\n\t\t\tbody: details,\n\t\t}).then(() => undefined);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Order.js","// @flow\nimport request from \"./request\";\nimport type { CommissionGroup } from \"../types/Commission\";\n\n/**\n * @module\n * @example import { Commission } from \"drivewealth-back-office-javascript\";\n */\nexport default class Commission {\n\t/**\n\t * List all available commission groups\n\t */\n\tstatic getAllCommissionGroups(): Promise<Array<CommissionGroup>> {\n\t\treturn request({\n\t\t\tendpoint: \"/commissions\",\n\t\t}).then(data => data.body.commissionGroups);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Commission.js","// @flow\nimport type { ReportTicket, ReportViolations, ExtraFields, ReportFile } from \"../types/Reports\";\nimport Sessions from \"../internal/Sessions\";\nimport { Config, HOSTS } from \"./Config\";\nimport request from \"./request\";\n\n// This definition tells flow that there is a global \"document\" accessible in a browser\ndeclare var document: Object;\n\n/**\n * @module\n * @example import { Reports } from \"drivewealth-back-office-javascript\";\n */\nexport default class Reports {\n\t/**\n\t * @constant\n\t * @property {string} PDF\n\t * @property {string} XLS\n\t * @property {string} JSON\n\t * @property {string} HTML\n\t */\n\tstatic REPORT_FORMATS = {\n\t\tPDF: \"PDF\",\n\t\tXLS: \"XLS\",\n\t\tJSON: \"JSON\",\n\t\tHTML: \"HTML\",\n\t};\n\n\t/**\n\t * @constant\n\t * @property {string} RESTRICTED\n\t * @property {string} ACCOUNT_VIOLATIONS\n\t * @property {string} TICKET_AUDIT\n\t * @property {string} RECONCILIATION\n\t * @property {string} TRANSACTION\n\t * @property {string} POSITIONS_AND_ORDERS\n\t * @property {string} POSITIONS\n\t * @property {string} PLACED_ORDERS\n\t * @property {string} REFERRED_ACCOUNTS\n\t * @property {string} FINANCIALS\n\t * @property {string} CORRESPONDENT\n\t * @property {string} STATEMENTS\n\t * @property {string} CONFIRMS\n\t */\n\tstatic REPORT_NAMES = {\n\t\tRESTRICTED: \"RestrictedReport\",\n\t\tACCOUNT_VIOLATIONS: \"AccountViolations\",\n\t\tTICKET_AUDIT: \"TicketAudit\",\n\t\tRECONCILIATION: \"EodNotification\",\n\t\tTRANSACTION: \"EodTransaction\",\n\t\tPOSITIONS_AND_ORDERS: \"PositionRestingOrder\",\n\t\tPOSITIONS: \"PositionDetail\",\n\t\tPLACED_ORDERS: \"OrderTrans\",\n\t\tREFERRED_ACCOUNTS: \"Account\",\n\t\tFINANCIALS: \"AccountFins\",\n\t\tCORRESPONDENT: \"correspondantReport\",\n\t\tSTATEMENTS: \"statements\",\n\t\tCONFIRMS: \"confirms\",\n\t};\n\n\tstatic constructBody = (format: string, name: string, extraFields: ?ExtraFields) => ({\n\t\tReportFormat: format,\n\t\tReportName: name,\n\t\tsessionKey: Sessions.get(),\n\t\tWlpID: \"DW\",\n\t\tLanguageID: \"en_US\",\n\t\t...extraFields,\n\t});\n\n\t/**\n\t * Download a specific report.\n\t * @param format Report [file type](#Reports.REPORT_FORMATS)\n\t * @param name Report [name](#Reports.REPORT_NAMES)\n\t * @param extraFields Optionally filter the report with [extra properties](#extrafields)\n\t */\n\tstatic downloadReport(format: string, name: string, extraFields: ?Object): void {\n\t\tconst fields = Reports.constructBody(format, name, extraFields);\n\n\t\tconst url = Config.env[HOSTS.REPORTS] + \"/DriveWealth\";\n\n\t\tconst form = document.createElement(\"form\");\n\t\tform.setAttribute(\"target\", \"_blank\");\n\t\tform.setAttribute(\"method\", \"post\");\n\t\tform.setAttribute(\"action\", url);\n\n\t\tfor (const field in fields) {\n\t\t\tconst input = document.createElement(\"input\");\n\t\t\tinput.setAttribute(\"name\", field);\n\t\t\tinput.setAttribute(\"value\", fields[field]);\n\t\t\tinput.setAttribute(\"type\", \"hidden\");\n\t\t\tform.appendChild(input);\n\t\t}\n\n\t\tdocument.body.appendChild(form);\n\t\tform.submit();\n\t\tform.parentNode.removeChild(form);\n\t}\n\n\t/**\n\t * Get specific report data.\n\t * @param name Report [name](#Reports.REPORT_NAMES)\n\t * @param extraFields Optionally filter the report with [extra properties](#extrafields)\n\t */\n\tstatic getReport(name: string, extraFields: ?Object): Promise<any> {\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\thost: HOSTS.REPORTS,\n\t\t\tendpoint: \"/DriveWealth\",\n\t\t\tbody: Reports.constructBody(Reports.REPORT_FORMATS.JSON, name, extraFields),\n\t\t\tauthenticated: false,\n\t\t\tusesAppKey: false,\n\t\t\taddlHeaders: {\n\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\",\n\t\t\t},\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic listFiles(\n\t\taccountID: string,\n\t\treportName: string,\n\t\tdateStart: string,\n\t\tdateEnd: string,\n\t): Promise<Array<ReportFile>> {\n\t\treturn request({\n\t\t\tendpoint: `/accounts/${accountID}/${reportName}?from=${dateStart}&to=${dateEnd}`,\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getFileURL(accountID: string, fileKey: string): Promise<string> {\n\t\treturn request({\n\t\t\tendpoint: `/${Reports.REPORT_NAMES.STATEMENTS}/${accountID}/${fileKey}`,\n\t\t}).then(data => data.body.url);\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic downloadRestrictedReport(fileType: string): void {\n\t\tReports.downloadReport(fileType, Reports.REPORT_NAMES.RESTRICTED, {\n\t\t\tsubscription: true,\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic downloadAccountViolations(fileType: string, TradingType: string, date: Date): void {\n\t\tReports.downloadReport(fileType, Reports.REPORT_NAMES.ACCOUNT_VIOLATIONS, {\n\t\t\tTradingType,\n\t\t\tDate: date.toISOString(),\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getAccountViolations(TradingType: string, date: Date): Promise<Array<ReportViolations>> {\n\t\treturn Reports.getReport(Reports.REPORT_NAMES.ACCOUNT_VIOLATIONS, {\n\t\t\tTradingType,\n\t\t\tDate: date.toISOString(),\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic downloadTicketAudit(fileType: string, OrderNo: string): void {\n\t\tReports.downloadReport(fileType, Reports.REPORT_NAMES.TICKET_AUDIT, {\n\t\t\tOrderNo: OrderNo.toUpperCase(),\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getTicketAudit(OrderNo: string): Promise<Array<ReportTicket>> {\n\t\treturn Reports.getReport(Reports.REPORT_NAMES.TICKET_AUDIT, {\n\t\t\tOrderNo: OrderNo.toUpperCase(),\n\t\t});\n\t}\n\n\t/**\n\t * @static\n\t */\n\tstatic getCorrespondant(date: string): Promise<string> {\n\t\treturn request({\n\t\t\tendpoint: `/${Reports.REPORT_NAMES.CORRESPONDENT}?date=${date}`,\n\t\t}).then(data => data.body.url);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Reports.js","// @flow\nimport type { MoneyMovementDetails, PatchBody } from \"../types/MoneyMovement\";\nimport type { PaginationOptions } from \"../types/Transaction\";\nimport request from \"./request\";\n\n/**\n * @class MoneyMovement\n * @description allow clients to deposit/withdraw money from their DriveWealth account.\n */\nexport default class MoneyMovement {\n\tstatic DIRECTIONS = {\n\t\tDEPOSITS: \"Deposits\",\n\t\tWITHDRAWALS: \"Redemptions\",\n\t}\n\n\t/**\n\t * Get money movement list based on status\n\t */\n\tstatic getList(\n\t\tdirection: string,\n\t\tstatus: string,\n\t\ttype?: Array<string> | string | null,\n\t\toptions?: PaginationOptions,\n\t): Promise<{ data: Object}> {\n\t\tlet endpoint = `/funding/${direction.toLowerCase()}?status=${status.toUpperCase()}`;\n\n\t\tif (type) {\n\t\t\tendpoint += `&type=${\n\t\t\t\t(typeof type === \"string\"\n\t\t\t\t\t? type\n\t\t\t\t\t: type.join(\",\")\n\t\t\t\t).toUpperCase()\n\t\t\t}`;\n\t\t}\n\n\t\tif (options) {\n\t\t\tif (options.direction && options.offset && options.limit) {\n\t\t\t\tendpoint += `&limit=${options.limit}&offset=${options.offset}&direction=${options.direction}`;\n\t\t\t} else if (options.limit) {\n\t\t\t\tendpoint += `&limit=${options.limit}`;\n\t\t\t}\n\t\t}\n\n\t\treturn request({ endpoint }).then(data => ({\n\t\t\tdata: data.body,\n\t\t}));\n\t}\n\n\t/**\n\t * Get details about a deposit/redemption by its ID.\n\t */\n\tstatic get(id: string, direction: string): Promise<MoneyMovementDetails> {\n\t\t/*\n\t\t* types: \"deposits\" | \"redemptions\"\n\t\t*/\n\t\treturn request({\n\t\t\tendpoint: `/funding/${direction}/${id}`,\n\t\t}).then(data => data.body);\n\t}\n\n\t/**\n\t * Edit details about a deposit/redemption by its ID.\n\t */\n\tstatic edit(id: string, details: Object, direction: string) {\n\t\treturn request({\n\t\t\tmethod: \"PATCH\",\n\t\t\tendpoint: `/funding/${direction}/${id}`,\n\t\t\tbody: details,\n\t\t}).then(() => undefined);\n\t}\n\n\t/**\n\t * Get data about deposits/redemptions\n\t */\n\tstatic downloadCSV(\n\t\tdirection: string,\n\t\tstatus: string,\n\t\ttype: string,\n\t): Promise<string> {\n\t\tconst endpoint = `/funding/${direction.toLowerCase()}/${type}/download?status=${status}`;\n\n\t\treturn request({\n\t\t\tendpoint,\n\t\t\taddlHeaders: {\n\t\t\t\tAccept: \"text/csv\",\n\t\t\t},\n\t\t}).then(data => data.body);\n\t}\n\n\tstatic getRecurringDepositsForUser(userID: string) {\n\t\tconst endpoint = `/users/${userID}/recurring-deposits`;\n\t\treturn request({ endpoint }).then(data => data.body);\n\t}\n\n\tstatic getDepositHistory(depositID: string) {\n\t\tconst endpoint = `/funding/recurring-deposits/${depositID}`;\n\t\treturn request({ endpoint }).then(data => data.body);\n\t}\n\n\tstatic updateRecurringDeposit(depositID: string, body: PatchBody) {\n\t\tconst endpoint = `/funding/recurring-deposits/${depositID}`;\n\t\treturn request({\n\t\t\tmethod: \"PATCH\",\n\t\t\tendpoint,\n\t\t\tbody,\n\t\t}).then(data => data.body);\n\t}\n\n\tstatic deleteRecurringDeposit(depositID: string) {\n\t\tconst endpoint = `/funding/recurring-deposits/${depositID}`;\n\t\treturn request({\n\t\t\tmethod: \"DELETE\",\n\t\t\tendpoint,\n\t\t}).then(data => data);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/MoneyMovement.js","// @flow\nimport request from \"./request\";\nimport type { UserDetails } from \"../types/User\";\nimport type {\n\tRole,\n\tRoleGroup,\n\tPermissionRole,\n} from \"../types/Roles\";\n\n/**\n * @module\n * @description Roles allow clients to send REST requests to the Permissions API.\n * @example import { Permissions } from \"drivewealth-back-office-javascript\";\n */\nexport default class Roles {\n\t/**\n\t * @static\n\t */\n\tstatic getAllPermissionGroups(): Promise<Array<RoleGroup>> {\n\t\treturn request({\n\t\t\tendpoint: `/permissions/groups`,\n\t\t}).then(data => data.body);\n\t};\n\n\t/**\n\t * @static\n\t */\n\tstatic getAllPermissions(): Promise<Array<Role>> {\n\t\treturn request({\n\t\t\tendpoint: `/permissions`,\n\t\t}).then(data => data.body);\n\t};\n\n\t/**\n\t * @static\n\t */\n\tstatic createPermissionGroup(\n\t\tactive: boolean,\n\t\tdescription: string,\n\t\tpermissionSet: Array<string>,\n\t\trole: string,\n\t): Promise<RoleGroup> {\n\t\tconst body = {\n\t\t\tactive,\n\t\t\tdescription,\n\t\t\tpermissionSet,\n\t\t\trole,\n\t\t};\n\t\treturn request({\n\t\t\tmethod: \"POST\",\n\t\t\tendpoint: `/permissions/groups`,\n\t\t\tbody,\n\t\t}).then(data => data.body);\n\t};\n\n\t/**\n\t * @static\n\t */\n\tstatic editRole(\n\t\tid: string,\n\t\trole: RoleGroup,\n\t): Promise<PermissionRole> {\n\t\tconst body = role;\n\t\treturn request ({\n\t\t\tmethod: \"PATCH\",\n\t\t\tendpoint: `/permissions/groups/${id}`,\n\t\t\tbody,\n\t\t}).then(data => data.body);\n\t};\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Roles.js","// @flow\nimport request from \"./request\";\nimport type { ProductDetails, AllocationBody, Portfolio, Fund, EditProduct } from \"../types/Advisors\";\n\n/**\n * @module\n * @example import { Advisor } from \"drivewealth-back-office-javascript\";\n */\nexport default class Advisor {\n\t/**\n\t * Create a product\n\t */\n    static createProduct(userID: string, productDetails: ProductDetails) {\n        const body = {\n            userID,\n            ...productDetails,\n        };\n        return request({\n            method: \"POST\",\n            body,\n            endpoint: \"/managed/products\",\n        }).then(data => data.body);\n    }\n\n    /**\n\t * updates a product\n\t */\n\n    static updateProduct(productID: string, productDetails: EditProduct) {\n        return request({\n            method: \"PATCH\",\n            body: productDetails,\n            endpoint: `/managed/products/${productID}`,\n        }).then(data => data.body);\n    }\n\n    /**\n\t * get a product by id\n\t */\n\n    static getProductByID(productID: string) {\n        return request({ endpoint: `/managed/products/${productID}` }).then(data => data.body);\n    }\n\n    /**\n\t * get products for an advisor\n\t */\n\n    static getAllAdvisorProducts(userID: string) {\n        return request({ endpoint: `/users/${userID}/managed/products` }).then(data => data.body);\n    }\n\n    /**\n\t * Gets all advisors allocations\n\t */\n\n    static getAllAllocations(dateFrom: Date, dateTo: Date) {\n        return request({ endpoint: `/managed/allocations?from=${dateFrom.toISOString()}&to=${dateTo.toISOString()}` }).then(data => data.body);\n    }\n\n    /**\n\t * Gets allocations for an individual advisor \n\t */\n\n    static getAdvisorAllocations(userID: string) {\n        return request({ endpoint: `/users/${userID}/managed/allocations` }).then(data => data.body);\n    }\n\n    /**\n    * gets a single allocation\n    */\n\n    static getAllocationByID(allocationID: string) {\n        return request({ endpoint: `/managed/allocations/${allocationID}` }).then(data => data.body);\n    };\n\n    /**\n    * creates an allocation\n    */\n\n    static createAllocation(allocation: AllocationBody) {\n        return request({\n            endpoint: `/managed/allocations`,\n            method: \"POST\",\n            body: allocation,\n        }).then(data => data.body);\n    }\n\n    /**\n    * get orders for all advisors\n    */\n\n    static getAllAdvisorOrders(dateFrom: Date, dateTo: Date) {\n        return request({\n            endpoint: `/managed/orders?from=${dateFrom.toISOString()}&to=${dateTo.toISOString()}`,\n        }).then(data => data.body);\n    };\n\n    /**\n    * get orders for an advisor\n    */\n\n    static getOrdersForAdvisor(userID: string, dateFrom: Date, dateTo: Date) {\n        return request({\n            endpoint: `/users/${userID}/managed/orders?from=${dateFrom.toISOString()}&to=${dateTo.toISOString()}`,\n        }).then(data => data.body);\n    }\n\n    /**\n    * gets advisors portfolio\n    */\n\n    static getAdvisorPortfolios(userID: string) {\n        return request({ endpoint: `/users/${userID}/managed/portfolios` }).then(data => data.body);\n    };\n\n    /**\n    * get portfolio by id\n    */\n\n    static getPortfolioById(portfolioID: string) {\n        return request({ endpoint: `/managed/portfolios/${portfolioID}` }).then(data => data.body);\n    };\n\n    /**\n    * Creates a portfolio\n    */\n\n    static createPortfolio(portfolio: Portfolio) {\n        return request({\n            endpoint: `/managed/portfolios`,\n            method: \"POST\",\n            body: portfolio,\n        }).then(data => data.body);\n    };\n\n    /**\n    * Edits a portfolio\n    */\n\n    static updatePortfolio(portfolio: Portfolio, portfolioID: string) {\n        return request({\n            endpoint: `/managed/portfolios/${portfolioID}`,\n            body: portfolio,\n            method: \"PATCH\",\n        }).then(data => data.body);\n    }\n\n    /**\n    * Gets funds for an advisor\n    */\n\n    static getAdvisorFunds(userID: string) {\n        return request({\n            endpoint: `/users/${userID}/managed/funds`,\n        }).then(data => data.body);\n    }\n\n    /**\n    * Gets details for a fund\n    */\n\n    static getFundDetails(fundID: string) {\n        return request({\n            endpoint: `/managed/funds/${fundID}`,\n        }).then(data => data.body);\n    }\n\n    /**\n    * Creates a fund\n    */\n\n    static createFund(fund: Fund) {\n        return request({\n            body: fund,\n            endpoint: \"/managed/funds\",\n            method: \"POST\",\n        }).then(data => data.body);\n    }\n\n    /**\n   * Updates a fund\n   */\n\n    static updateFund(fund: Fund, fundID: string) {\n        return request({\n            body: fund,\n            endpoint: `/managed/funds/${fundID}`,\n            method: \"PATCH\",\n        }).then(data => data.body);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/Advisors.js"]}